{"@timestamp":"2025-08-23T22:44:15.321372+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.337701+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 12533 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.338223+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.689359+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.690058+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.71346+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.714293+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.714752+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.715591+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.716048+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.716454+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.717752+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.718154+09:00","@version":"1","message":"Finished Spring Data repository scanning in 24 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.723161+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.723619+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.776936+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.784672+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.785429+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.792298+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.792643+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.792797+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.792929+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.793172+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.793334+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.793467+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:15.793611+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.114625+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.137058+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.152363+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.26128+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.272824+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.346535+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.347521+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.372775+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.769038+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:16.799351+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:17.198213+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:17.815123+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:17.829792+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:18.220244+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:18.271019+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.163 seconds (process running for 3.666)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:18.783551+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:18.788705+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:44:18.789634+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.547925+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.564693+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 13428 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.564974+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.580942+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.581079+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.884661+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.885198+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.899287+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.899719+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.900063+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.9004+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.900671+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.900967+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.901616+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.901836+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.905042+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.905331+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.956467+09:00","@version":"1","message":"Finished Spring Data repository scanning in 49 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.961547+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.961941+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.966858+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.967068+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.967175+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.967249+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.96731+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.967371+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.967445+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:38.967498+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.26854+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.27365+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.274453+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.274553+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.289651+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.289807+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 708 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.491051+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.506123+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.516209+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.607582+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.617723+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.678495+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.679114+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:39.698081+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.065451+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.10142+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.310218+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.605364+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.619485+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.899495+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.929507+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.938402+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.94401+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:51:40.950139+09:00","@version":"1","message":"Started HamalogApplication in 2.637 seconds (process running for 2.785)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.490886+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.507158+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 13527 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.507507+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.527426+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.527624+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.863933+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.864423+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.879074+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.879511+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.879807+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.880108+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.880407+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.880687+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.881254+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.881445+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.884615+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.884912+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.935655+09:00","@version":"1","message":"Finished Spring Data repository scanning in 49 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.940894+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.94132+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946276+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946462+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946552+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946614+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946676+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946736+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946806+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:54.946853+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.292944+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.298079+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.298705+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.29878+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.315072+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.315259+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 788 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.546193+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.564019+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.58217+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.685558+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.69761+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.783128+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.784064+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:55.812698+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:56.219683+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:56.257321+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:56.47262+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:56.801195+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:56.813237+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.122669+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.14917+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.162782+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.271802+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.276342+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.279872+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.280504+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.28122+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:52:57.289769+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.264213+09:00","@version":"1","message":"Restarting due to 84 class path changes (0 additions, 84 deletions, 0 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.268369+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.269112+09:00","@version":"1","message":"Pausing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.273794+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.274003+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.392685+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.395739+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-9","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.396256+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:05.396928+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.241566+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.256075+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 14205 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.25635+09:00","@version":"1","message":"Running with Spring Boot v3.4.5, Spring v6.2.6","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.256611+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.5716+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.572227+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.592281+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.593807+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.595109+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.596404+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.599322+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.600427+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.602136+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.602495+09:00","@version":"1","message":"Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.606455+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.607+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.619507+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 13428 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.619605+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.661147+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.668454+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.6691+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.675163+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.675475+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.675614+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.675743+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.675872+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.67601+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.676168+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.676282+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.701257+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.701395+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.705219+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.705583+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.705824+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.706092+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.70633+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.706547+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.706868+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.706951+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.708355+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.708411+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.713773+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.715312+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.715371+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.717654+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.71774+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.717787+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.717828+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.717868+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.717907+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.717945+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.718082+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.787547+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.78838+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.788472+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.793997+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.794091+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 174 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.86251+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.86346+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.866919+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.867248+09:00","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.868191+09:00","@version":"1","message":"HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.868282+09:00","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.868518+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.930743+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.940963+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.964035+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:07.984459+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.001981+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.036225+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.115767+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.129453+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.214839+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.215758+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.221121+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.238535+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.421705+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.445322+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.452908+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.455702+09:00","@version":"1","message":"Started HamalogApplication in 0.865 seconds (process running for 390.278)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.456669+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.650831+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:08.683055+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:09.066102+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:09.782622+09:00","@version":"1","message":"FileStorageService initialized with upload directory: ./data/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:09.796901+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:10.140555+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:10.195855+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.15 seconds (process running for 3.589)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:11.003722+09:00","@version":"1","message":"Failed to get recent side effects from Redis cache for member 1: Redis connection error","logger_name":"com.Hamalog.service.sideEffect.RecentSideEffectCacheService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:11.137577+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:11.144147+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:11.145076+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.168333+09:00","@version":"1","message":"Restarting due to 84 class path changes (0 additions, 0 deletions, 84 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.169166+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.170237+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.191403+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.20551+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 14367 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.205874+09:00","@version":"1","message":"Running with Spring Boot v3.4.5, Spring v6.2.6","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.2066+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.278525+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.27904+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-11","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.279414+09:00","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.279607+09:00","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.336867+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 13428 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.336999+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.416417+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.416547+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.42013+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.420495+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.420755+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.421019+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.421256+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.421468+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.421851+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.421892+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.423421+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.42347+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.429281+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.430861+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.430907+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433044+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433495+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433572+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433609+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433658+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433687+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433716+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.433742+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.500492+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.500877+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.500931+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.506297+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.506361+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 169 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.58582+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.586777+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.588803+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.589595+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.590383+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.59069+09:00","@version":"1","message":"HikariPool-4 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.591568+09:00","@version":"1","message":"HikariPool-4 - Added connection conn30: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.591653+09:00","@version":"1","message":"HikariPool-4 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.591895+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.61745+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.618199+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.618635+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.619066+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.619467+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.61982+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.620825+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.621119+09:00","@version":"1","message":"Finished Spring Data repository scanning in 28 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.626575+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.627119+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.657149+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.666707+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.682679+09:00","@version":"1","message":"Finished Spring Data repository scanning in 53 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.691371+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.692718+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.700277+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.700977+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.701201+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.701382+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.701515+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.701641+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.701764+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.702179+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.760538+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:52.980326+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.074109+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.096389+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.110099+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.173427+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.188882+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.196219+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.19914+09:00","@version":"1","message":"Started HamalogApplication in 0.883 seconds (process running for 435.021)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.19975+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.210514+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.221694+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.290381+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.291292+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.312592+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.684762+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:53.715204+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:54.094054+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:54.700657+09:00","@version":"1","message":"FileStorageService initialized with upload directory: ./data/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:54.722101+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:55.075316+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:55.113709+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.129 seconds (process running for 3.565)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:55.881769+09:00","@version":"1","message":"Failed to get recent side effects from Redis cache for member 1: Redis connection error","logger_name":"com.Hamalog.service.sideEffect.RecentSideEffectCacheService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:56.014547+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:56.020893+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:56.022445+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:57.697151+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:57.71385+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 14431 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:57.714013+09:00","@version":"1","message":"Running with Spring Boot v3.4.5, Spring v6.2.6","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:57.714213+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:57.730658+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:57.730895+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.04538+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.045891+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.059927+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.060327+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.060631+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.060963+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.06126+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.061553+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.062159+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.062372+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.065419+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.065759+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.118233+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.123535+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.123944+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129056+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129257+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129332+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129392+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129464+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129532+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129726+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.129787+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.435392+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.440556+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.441423+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.441571+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.456987+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.457136+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 726 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.663663+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.679157+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.693258+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.782954+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.793168+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.856056+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.856695+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:58.876482+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.250623+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.25554+09:00","@version":"1","message":"\n    drop table if exists medication_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.256917+09:00","@version":"1","message":"\n    drop table if exists medication_schedule cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.25706+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.257181+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.257276+09:00","@version":"1","message":"\n    drop table if exists medication_time cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.257369+09:00","@version":"1","message":"\n    drop table if exists member cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.25747+09:00","@version":"1","message":"\n    drop table if exists side_effect cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.257577+09:00","@version":"1","message":"\n    drop table if exists side_effect_degree cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.257684+09:00","@version":"1","message":"\n    drop table if exists side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.257785+09:00","@version":"1","message":"\n    drop table if exists side_effect_side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.25933+09:00","@version":"1","message":"\n    create table medication_record (\n        is_take_medication boolean not null,\n        medication_record_id bigint generated by default as identity,\n        medication_schedule_id bigint not null,\n        medication_time_id bigint not null,\n        real_take_time timestamp(6),\n        primary key (medication_record_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.262452+09:00","@version":"1","message":"\n    create table medication_schedule (\n        per_day integer not null,\n        prescription_date date not null,\n        prescription_days integer not null,\n        start_of_ad date not null,\n        medication_schedule_id bigint generated by default as identity,\n        member_id bigint not null,\n        hospital_name varchar(20) not null,\n        name varchar(20) not null,\n        memo TEXT,\n        alarm_type enum ('SOUND','VIBE') not null,\n        primary key (medication_schedule_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.263122+09:00","@version":"1","message":"\n    create table medication_schedule_group (\n        medication_schedule_group_id bigint generated by default as identity,\n        member_id bigint not null,\n        name varchar(20) not null,\n        primary key (medication_schedule_group_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.263616+09:00","@version":"1","message":"\n    create table medication_schedule_medication_schedule_group (\n        medication_schedule_group_id bigint not null,\n        medication_schedule_id bigint not null,\n        primary key (medication_schedule_group_id, medication_schedule_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.264462+09:00","@version":"1","message":"\n    create table medication_time (\n        take_time time(6) not null,\n        medication_schedule_id bigint not null,\n        medication_time_id bigint generated by default as identity,\n        primary key (medication_time_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.265174+09:00","@version":"1","message":"\n    create table member (\n        birthday date not null,\n        name varchar(6) not null,\n        created_at timestamp(6) not null,\n        member_id bigint generated by default as identity,\n        phone_number varchar(13) not null,\n        login_id varchar(20) not null unique,\n        password varchar(255) not null,\n        primary key (member_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.26595+09:00","@version":"1","message":"\n    create table side_effect (\n        side_effect_id bigint generated by default as identity,\n        name varchar(20) not null,\n        type varchar(20) not null,\n        primary key (side_effect_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.266362+09:00","@version":"1","message":"\n    create table side_effect_degree (\n        degree integer,\n        id bigint generated by default as identity,\n        side_effect_record_id bigint not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.266883+09:00","@version":"1","message":"\n    create table side_effect_record (\n        created_at timestamp(6) not null,\n        member_id bigint not null,\n        side_effect_record_id bigint generated by default as identity,\n        primary key (side_effect_record_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.267277+09:00","@version":"1","message":"\n    create table side_effect_side_effect_record (\n        degree integer not null,\n        side_effect_id bigint not null,\n        side_effect_record_id bigint not null,\n        primary key (side_effect_id, side_effect_record_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.267809+09:00","@version":"1","message":"\n    alter table if exists medication_record \n       add constraint FKo2fgadci587dspd5wq01xjbew \n       foreign key (medication_schedule_id) \n       references medication_schedule","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.272381+09:00","@version":"1","message":"\n    alter table if exists medication_record \n       add constraint FK3dj22e5eip0bxqx7hxr9v9qoo \n       foreign key (medication_time_id) \n       references medication_time","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.2731+09:00","@version":"1","message":"\n    alter table if exists medication_schedule \n       add constraint FKleqcnlh89jn0oixwdlme9a5m9 \n       foreign key (member_id) \n       references member","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.274776+09:00","@version":"1","message":"\n    alter table if exists medication_schedule_group \n       add constraint FKbe928gcj5f0qbrbfrom6qnovb \n       foreign key (member_id) \n       references member","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.275498+09:00","@version":"1","message":"\n    alter table if exists medication_schedule_medication_schedule_group \n       add constraint FK3k539i26349mhto5t4gjr1k0q \n       foreign key (medication_schedule_id) \n       references medication_schedule","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.276207+09:00","@version":"1","message":"\n    alter table if exists medication_schedule_medication_schedule_group \n       add constraint FK42fsklu5y1rwa3eleg2gjrdfy \n       foreign key (medication_schedule_group_id) \n       references medication_schedule_group","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.276814+09:00","@version":"1","message":"\n    alter table if exists medication_time \n       add constraint FKpi3bcxgy78fofn84ge0gbn20p \n       foreign key (medication_schedule_id) \n       references medication_schedule","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.277417+09:00","@version":"1","message":"\n    alter table if exists side_effect_degree \n       add constraint FKaowxh1yx6smklsy4t9whmyj2w \n       foreign key (side_effect_record_id) \n       references side_effect_record","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.278063+09:00","@version":"1","message":"\n    alter table if exists side_effect_record \n       add constraint FKd3ludbd4ccmr9kp9svdtwug3t \n       foreign key (member_id) \n       references member","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.278675+09:00","@version":"1","message":"\n    alter table if exists side_effect_side_effect_record \n       add constraint FKi81llxheiwysgeh8vloaenft2 \n       foreign key (side_effect_id) \n       references side_effect","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.279392+09:00","@version":"1","message":"\n    alter table if exists side_effect_side_effect_record \n       add constraint FK2lcwqvkv7i2scwdn704w5s3xn \n       foreign key (side_effect_record_id) \n       references side_effect_record","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.281498+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.498814+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.790685+09:00","@version":"1","message":"FileStorageService initialized with upload directory: ./data/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:58:59.802606+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.086037+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.116272+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.129812+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.241881+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.245215+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.245655+09:00","@version":"1","message":"\n    drop table if exists medication_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.246611+09:00","@version":"1","message":"\n    drop table if exists medication_schedule cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.247189+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.247672+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.248056+09:00","@version":"1","message":"\n    drop table if exists medication_time cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.248345+09:00","@version":"1","message":"\n    drop table if exists member cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.249029+09:00","@version":"1","message":"\n    drop table if exists side_effect cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.249357+09:00","@version":"1","message":"\n    drop table if exists side_effect_degree cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.249623+09:00","@version":"1","message":"\n    drop table if exists side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.249875+09:00","@version":"1","message":"\n    drop table if exists side_effect_side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.252496+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.253027+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.253664+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T22:59:00.261319+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.235182+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.25417+09:00","@version":"1","message":"Starting OAuth2ConfigurationTest using Java 21.0.2 with PID 14769 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.OAuth2ConfigurationTest","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.254508+09:00","@version":"1","message":"Running with Spring Boot v3.4.5, Spring v6.2.6","logger_name":"com.Hamalog.OAuth2ConfigurationTest","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.254827+09:00","@version":"1","message":"The following 1 profile is active: \"local\"","logger_name":"com.Hamalog.OAuth2ConfigurationTest","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.554112+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.55477+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.572382+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.572995+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.573514+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.573942+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.574311+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.574696+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.575407+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.575659+09:00","@version":"1","message":"Finished Spring Data repository scanning in 18 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.579939+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.580494+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.635143+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.645038+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.645784+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.660922+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.661339+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.661516+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.661638+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.661995+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.662285+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.662449+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.662587+09:00","@version":"1","message":"Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:47.98835+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.007823+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.023688+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.138948+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.149932+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.219998+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.220871+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.242007+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.70027+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.70604+09:00","@version":"1","message":"\n    drop table if exists medication_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.707847+09:00","@version":"1","message":"\n    drop table if exists medication_schedule cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.708093+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.708277+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.708444+09:00","@version":"1","message":"\n    drop table if exists medication_time cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.708616+09:00","@version":"1","message":"\n    drop table if exists member cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.708906+09:00","@version":"1","message":"\n    drop table if exists side_effect cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.709404+09:00","@version":"1","message":"\n    drop table if exists side_effect_degree cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.709686+09:00","@version":"1","message":"\n    drop table if exists side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.709861+09:00","@version":"1","message":"\n    drop table if exists side_effect_side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.711847+09:00","@version":"1","message":"\n    create table medication_record (\n        is_take_medication boolean not null,\n        medication_record_id bigint generated by default as identity,\n        medication_schedule_id bigint not null,\n        medication_time_id bigint not null,\n        real_take_time timestamp(6),\n        primary key (medication_record_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.715784+09:00","@version":"1","message":"\n    create table medication_schedule (\n        per_day integer not null,\n        prescription_date date not null,\n        prescription_days integer not null,\n        start_of_ad date not null,\n        medication_schedule_id bigint generated by default as identity,\n        member_id bigint not null,\n        hospital_name varchar(20) not null,\n        name varchar(20) not null,\n        memo TEXT,\n        alarm_type enum ('SOUND','VIBE') not null,\n        primary key (medication_schedule_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.716865+09:00","@version":"1","message":"\n    create table medication_schedule_group (\n        medication_schedule_group_id bigint generated by default as identity,\n        member_id bigint not null,\n        name varchar(20) not null,\n        primary key (medication_schedule_group_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.717488+09:00","@version":"1","message":"\n    create table medication_schedule_medication_schedule_group (\n        medication_schedule_group_id bigint not null,\n        medication_schedule_id bigint not null,\n        primary key (medication_schedule_group_id, medication_schedule_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.718444+09:00","@version":"1","message":"\n    create table medication_time (\n        take_time time(6) not null,\n        medication_schedule_id bigint not null,\n        medication_time_id bigint generated by default as identity,\n        primary key (medication_time_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.719394+09:00","@version":"1","message":"\n    create table member (\n        birthday date not null,\n        name varchar(6) not null,\n        created_at timestamp(6) not null,\n        member_id bigint generated by default as identity,\n        phone_number varchar(13) not null,\n        login_id varchar(20) not null unique,\n        password varchar(255) not null,\n        primary key (member_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.722339+09:00","@version":"1","message":"\n    create table side_effect (\n        side_effect_id bigint generated by default as identity,\n        name varchar(20) not null,\n        type varchar(20) not null,\n        primary key (side_effect_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.723008+09:00","@version":"1","message":"\n    create table side_effect_degree (\n        degree integer,\n        id bigint generated by default as identity,\n        side_effect_record_id bigint not null,\n        primary key (id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.725042+09:00","@version":"1","message":"\n    create table side_effect_record (\n        created_at timestamp(6) not null,\n        member_id bigint not null,\n        side_effect_record_id bigint generated by default as identity,\n        primary key (side_effect_record_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.725975+09:00","@version":"1","message":"\n    create table side_effect_side_effect_record (\n        degree integer not null,\n        side_effect_id bigint not null,\n        side_effect_record_id bigint not null,\n        primary key (side_effect_id, side_effect_record_id)\n    )","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.726695+09:00","@version":"1","message":"\n    alter table if exists medication_record \n       add constraint FKo2fgadci587dspd5wq01xjbew \n       foreign key (medication_schedule_id) \n       references medication_schedule","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.731817+09:00","@version":"1","message":"\n    alter table if exists medication_record \n       add constraint FK3dj22e5eip0bxqx7hxr9v9qoo \n       foreign key (medication_time_id) \n       references medication_time","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.732703+09:00","@version":"1","message":"\n    alter table if exists medication_schedule \n       add constraint FKleqcnlh89jn0oixwdlme9a5m9 \n       foreign key (member_id) \n       references member","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.734576+09:00","@version":"1","message":"\n    alter table if exists medication_schedule_group \n       add constraint FKbe928gcj5f0qbrbfrom6qnovb \n       foreign key (member_id) \n       references member","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.735302+09:00","@version":"1","message":"\n    alter table if exists medication_schedule_medication_schedule_group \n       add constraint FK3k539i26349mhto5t4gjr1k0q \n       foreign key (medication_schedule_id) \n       references medication_schedule","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.735981+09:00","@version":"1","message":"\n    alter table if exists medication_schedule_medication_schedule_group \n       add constraint FK42fsklu5y1rwa3eleg2gjrdfy \n       foreign key (medication_schedule_group_id) \n       references medication_schedule_group","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.736705+09:00","@version":"1","message":"\n    alter table if exists medication_time \n       add constraint FKpi3bcxgy78fofn84ge0gbn20p \n       foreign key (medication_schedule_id) \n       references medication_schedule","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.737461+09:00","@version":"1","message":"\n    alter table if exists side_effect_degree \n       add constraint FKaowxh1yx6smklsy4t9whmyj2w \n       foreign key (side_effect_record_id) \n       references side_effect_record","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.738109+09:00","@version":"1","message":"\n    alter table if exists side_effect_record \n       add constraint FKd3ludbd4ccmr9kp9svdtwug3t \n       foreign key (member_id) \n       references member","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.738792+09:00","@version":"1","message":"\n    alter table if exists side_effect_side_effect_record \n       add constraint FKi81llxheiwysgeh8vloaenft2 \n       foreign key (side_effect_id) \n       references side_effect","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.73944+09:00","@version":"1","message":"\n    alter table if exists side_effect_side_effect_record \n       add constraint FK2lcwqvkv7i2scwdn704w5s3xn \n       foreign key (side_effect_record_id) \n       references side_effect_record","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:48.741872+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.210914+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference or an asynchronous initialization dependency?","logger_name":"org.springframework.context.annotation.AnnotationConfigApplicationContext","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.323093+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.323743+09:00","@version":"1","message":"\n    drop table if exists medication_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.324869+09:00","@version":"1","message":"\n    drop table if exists medication_schedule cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.325556+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.326022+09:00","@version":"1","message":"\n    drop table if exists medication_schedule_medication_schedule_group cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.326354+09:00","@version":"1","message":"\n    drop table if exists medication_time cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.32665+09:00","@version":"1","message":"\n    drop table if exists member cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.327834+09:00","@version":"1","message":"\n    drop table if exists side_effect cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.328592+09:00","@version":"1","message":"\n    drop table if exists side_effect_degree cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.329172+09:00","@version":"1","message":"\n    drop table if exists side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.329509+09:00","@version":"1","message":"\n    drop table if exists side_effect_side_effect_record cascade ","logger_name":"org.hibernate.SQL","thread_name":"Test worker","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.330836+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.332032+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.351403+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-23T23:00:49.370561+09:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.Hamalog.OAuth2ConfigurationTest@65f1bf2c]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"Test worker","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@5ac3d009 testClass = com.Hamalog.OAuth2ConfigurationTest, locations = [], classes = [com.Hamalog.HamalogApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [PropertySourceDescriptor[locations=[], ignoreResourceNotFound=false, name=null, propertySourceFactory=null, encoding=null]], propertySourceProperties = [\"spring.profiles.active=local\", \"spring.main.web-application-type=none\", \"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\", \"spring.main.web-application-type=none\"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@6b8d96d9, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@9ef8eb7, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1ecee32c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@74960bfa, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@112f364d, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7ca33c24, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@70647175], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:155)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:111)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 4: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference or an asynchronous initialization dependency?\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\t... 87 common frames omitted\nCaused by: org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference or an asynchronous initialization dependency?\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.beforeSingletonCreation(DefaultSingletonBeanRegistry.java:542)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:310)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1367)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1197)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)\n\t... 113 common frames omitted\n","service":"hamalog","log_type":"application"}
