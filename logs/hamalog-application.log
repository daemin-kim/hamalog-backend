{"@timestamp":"2025-08-19T15:32:54.813808+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:54.841613+09:00","@version":"1","message":"Starting HamalogApplication v0.0.1-SNAPSHOT using Java 21.0.2 with PID 19632 (/Users/daeminkim/ideaProjects/Hamalog/build/libs/Hamalog-0.0.1-SNAPSHOT.jar started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:54.842132+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.267416+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.268407+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.287171+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.287755+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.288177+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.288597+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.288973+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.289372+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.290064+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.290321+09:00","@version":"1","message":"Finished Spring Data repository scanning in 19 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.294546+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.294976+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.36544+09:00","@version":"1","message":"Finished Spring Data repository scanning in 68 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.373235+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.373742+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.378862+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379068+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379168+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379266+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379366+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379471+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379576+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.379827+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.761517+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.771197+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.77288+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.773083+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.796313+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:55.796643+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 933 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.097114+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.118456+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.131896+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.273157+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.289093+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.36942+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.37038+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.399798+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.882961+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:56.924951+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:57.192461+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:57.759399+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:57.774503+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:58.089143+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:58.114657+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:58.128366+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:32:58.138371+09:00","@version":"1","message":"Started HamalogApplication in 3.69 seconds (process running for 3.966)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:33:02.107012+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:33:02.119538+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:33:02.237896+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:33:02.239235+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-19T15:33:02.239781+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
