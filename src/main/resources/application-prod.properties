# Production Configuration

# Disable development tools and H2 console
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false
spring.h2.console.enabled=false

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/hamalog?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA Production Settings
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# Use update to allow schema creation/updates during deployment
# Change to validate after initial deployment when schema is stable
spring.jpa.hibernate.ddl-auto=update

# N+1 Query Prevention Settings - Critical for Production Performance
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.properties.hibernate.batch_fetch_style=LEGACY
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Security Headers Enhancement
# SECURITY WARNING: secure=false allows cookies over HTTP - should be true for HTTPS in production
# TODO: Enable HTTPS and set secure=true for production deployment
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# JWT Configuration
# CRITICAL: JWT_SECRET must be provided as environment variable in production
jwt.secret=${JWT_SECRET}
jwt.expiry=${JWT_EXPIRY:3600000}

# Data Encryption
hamalog.encryption.key=${HAMALOG_ENCRYPTION_KEY:}

# OAuth2 and CORS Settings
hamalog.oauth2.redirect-uri=${FRONTEND_URL:http://112.72.248.195:8080}/oauth/kakao
hamalog.cors.allowed-origins=${ALLOWED_ORIGINS:http://112.72.248.195:8080}

# Logging Configuration
logging.level.com.Hamalog=info
logging.level.org.springframework.security=warn
logging.level.org.hibernate.SQL=warn
logging.level.org.hibernate.type.descriptor.sql=warn
logging.file.path=${LOG_DIR:/var/log/hamalog}

# Redis Production Configuration with Authentication
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD:}
spring.data.redis.timeout=2000ms
spring.data.redis.connect-timeout=2000ms

# Redis Connection Pool
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8

# Request Size Limits (DoS Protection)
# Maximum HTTP request size (default: 10MB for API requests, 50MB for file uploads)
server.max-http-request-header-size=64KB

# Tomcat connector configuration for request limits
server.tomcat.max-http-form-post-size=10MB
server.tomcat.max-swallow-size=10MB
server.tomcat.connection-timeout=20s
server.tomcat.max-connections=8192
server.tomcat.accept-count=100
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10

# Multipart Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Task execution pool settings for async operations
spring.task.execution.pool.max-size=20
spring.task.execution.pool.core-size=8
spring.task.execution.pool.queue-capacity=100
spring.task.execution.pool.keep-alive=60s

# File Upload Configuration
hamalog.upload.image-dir=${UPLOAD_DIR:/data/hamalog/images}

# Actuator Settings
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never
management.endpoint.health.show-components=never