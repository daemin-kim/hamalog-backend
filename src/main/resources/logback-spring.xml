<!--
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    &lt;!&ndash; Define properties for log file paths and patterns &ndash;&gt;
    <springProfile name="!prod">
        <property name="LOG_PATH" value="${LOG_DIR:-./logs}"/>
        <property name="LOG_LEVEL" value="${LOG_LEVEL:-INFO}"/>
    </springProfile>

    <springProfile name="prod">
        <property name="LOG_PATH" value="${LOG_DIR:-/var/log/hamalog}"/>
        <property name="LOG_LEVEL" value="${LOG_LEVEL:-WARN}"/>
    </springProfile>

    &lt;!&ndash; Console Appender for Development &ndash;&gt;
    <springProfile name="!prod">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%d{HH:mm:ss.SSS} [%thread] %highlight(%-5level) [%X{requestId:-}] %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>
    </springProfile>

    &lt;!&ndash; JSON Console Appender for Production &ndash;&gt;
    <springProfile name="prod">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <includeContext>true</includeContext>
                <includeMdc>true</includeMdc>
                <customFields>{"service":"hamalog","environment":"production"}</customFields>
                <fieldNames>
                    <timestamp>@timestamp</timestamp>
                    <message>message</message>
                    <level>level</level>
                    <thread>thread</thread>
                    <logger>logger</logger>
                </fieldNames>
            </encoder>
        </appender>
    </springProfile>

    &lt;!&ndash; Application Log File Appender &ndash;&gt;
    <appender name="APPLICATION_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/hamalog.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/hamalog.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeContext>true</includeContext>
            <includeMdc>true</includeMdc>
            <customFields>{"service":"hamalog","log_type":"application"}</customFields>
        </encoder>
    </appender>

    &lt;!&ndash; Audit Log File Appender &ndash;&gt;
    <appender name="AUDIT_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/audit.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/audit.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>365</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeContext>true</includeContext>
            <includeMdc>true</includeMdc>
            <customFields>{"service":"hamalog","log_type":"audit"}</customFields>
        </encoder>
    </appender>

    &lt;!&ndash; Security Log File Appender &ndash;&gt;
    <appender name="SECURITY_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/security.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/security.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>365</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeContext>true</includeContext>
            <includeMdc>true</includeMdc>
            <customFields>{"service":"hamalog","log_type":"security"}</customFields>
        </encoder>
    </appender>

    &lt;!&ndash; Performance Log File Appender &ndash;&gt;
    <appender name="PERFORMANCE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/performance.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/performance.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeContext>true</includeContext>
            <includeMdc>true</includeMdc>
            <customFields>{"service":"hamalog","log_type":"performance"}</customFields>
        </encoder>
    </appender>

    &lt;!&ndash; Error Log File Appender for Critical Issues &ndash;&gt;
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>90</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeContext>true</includeContext>
            <includeMdc>true</includeMdc>
            <includeStackTrace>true</includeStackTrace>
            <customFields>{"service":"hamalog","log_type":"error","severity":"high"}</customFields>
        </encoder>
    </appender>

    &lt;!&ndash; Async Appenders for Better Performance &ndash;&gt;
    <appender name="ASYNC_APPLICATION" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="APPLICATION_FILE"/>
        <queueSize>1024</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ERROR_FILE"/>
        <queueSize>512</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
    </appender>

    &lt;!&ndash; Logger Configurations &ndash;&gt;

    &lt;!&ndash; Application Logger &ndash;&gt;
    <logger name="com.Hamalog" level="${LOG_LEVEL}" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC_APPLICATION"/>
        <appender-ref ref="ASYNC_ERROR"/>
    </logger>

    &lt;!&ndash; Audit Logger &ndash;&gt;
    <logger name="AUDIT" level="INFO" additivity="false">
        <appender-ref ref="AUDIT_FILE"/>
        <springProfile name="!prod">
            <appender-ref ref="CONSOLE"/>
        </springProfile>
    </logger>

    &lt;!&ndash; Security Logger &ndash;&gt;
    <logger name="SECURITY" level="INFO" additivity="false">
        <appender-ref ref="SECURITY_FILE"/>
        <appender-ref ref="ASYNC_ERROR"/>
        <springProfile name="!prod">
            <appender-ref ref="CONSOLE"/>
        </springProfile>
    </logger>

    &lt;!&ndash; Performance Logger &ndash;&gt;
    <logger name="PERFORMANCE" level="INFO" additivity="false">
        <appender-ref ref="PERFORMANCE_FILE"/>
        <springProfile name="local,dev">
            <appender-ref ref="CONSOLE"/>
        </springProfile>
    </logger>

    &lt;!&ndash; Third-party Library Logging &ndash;&gt;
    <logger name="org.springframework.web" level="INFO"/>
    <logger name="org.springframework.security" level="WARN"/>
    <logger name="org.hibernate" level="WARN"/>
    <logger name="org.apache.http" level="WARN"/>
    <logger name="com.zaxxer.hikari" level="WARN"/>

    &lt;!&ndash; Reduce noise from health checks &ndash;&gt;
    <logger name="org.springframework.boot.actuate.health" level="WARN"/>

    &lt;!&ndash; Spring Boot specific &ndash;&gt;
    <logger name="org.springframework.boot" level="INFO"/>

    &lt;!&ndash; Root Logger &ndash;&gt;
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC_APPLICATION"/>
        <appender-ref ref="ASYNC_ERROR"/>
    </root>

    &lt;!&ndash; JVM Shutdown Hook to ensure logs are flushed &ndash;&gt;
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    &lt;!&ndash; Status Listener for debugging logback configuration issues &ndash;&gt;
    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>

</configuration>
-->
