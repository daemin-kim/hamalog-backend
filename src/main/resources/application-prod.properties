# Production Configuration for Hamalog Application

# Disable development tools
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Production Database Settings (MySQL required)
# Updated to match docker-compose.yml environment variable names
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/hamalog?useSSL=true&requireSSL=true&verifyServerCertificate=true&allowPublicKeyRetrieval=false&characterEncoding=UTF-8&serverTimezone=UTC}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# Driver is auto-detected by Spring Boot based on URL - don't hardcode it

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA Production Settings
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.ddl-auto=update

# Security Headers Enhancement
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# JWT Production Settings - Uses environment variables
# JWT secret MUST be provided via JWT_SECRET environment variable in production
# Generate secure key: openssl rand -base64 32
# Fallback provided only for emergency fallback scenarios
jwt.secret=${JWT_SECRET:xcrVqYlPMcLeEoEX+h8vjxZ97lS6AETwQJXJSLJ/h8g=}
jwt.expiry=${JWT_EXPIRY:3600000}

# OAuth2 Production Settings
# Fallback values provided to prevent startup failures when environment variables are empty in container environments
# KAKAO_CLIENT_ID and KAKAO_CLIENT_SECRET environment variables should be properly set in production
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID:dummy-client-id-for-production}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET:dummy-client-secret-for-production}
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI:https://your-domain.com/login/oauth2/code/kakao}

# Production OAuth2 redirect URI
hamalog.oauth2.redirect-uri=${FRONTEND_URL:https://your-domain.com}/oauth/kakao

# CORS Production Settings
hamalog.cors.allowed-origins=${ALLOWED_ORIGINS:https://your-domain.com}

# Logging Configuration
# Production logging levels are configured in logback-spring.xml
logging.level.com.Hamalog=info
logging.level.org.springframework.security=warn
logging.level.org.hibernate.SQL=warn
logging.level.org.hibernate.type.descriptor.sql=warn

# Production log directory (overridable via environment variable)
logging.file.path=${LOG_DIR:/var/log/hamalog}

# JSON structured logging configured in logback-spring.xml

# File Upload Configuration
hamalog.upload.image-dir=${UPLOAD_DIR:/data/hamalog/images}

# Actuator Settings for Production Monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true