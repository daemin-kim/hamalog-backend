{"@timestamp":"2025-08-17T21:20:45.699065+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:45.719683+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 76915 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:45.720008+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:45.735353+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:45.735478+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.083269+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.083943+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.097994+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.098412+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.098723+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.099055+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.099357+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.099537+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.103188+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.10369+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.115684+09:00","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.410516+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.416206+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.417076+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.417196+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.435607+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.43578+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 700 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:46.509463+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:49.10048+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:49.137526+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:49.152547+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:49.266117+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:49.277779+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:50.287779+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:50.290969+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 38 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 51 common frames omitted\nCaused by: java.net.UnknownHostException: db\n\tat java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 54 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:50.29976+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:50.30672+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:20:50.32349+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.494101+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.512782+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 77899 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.515965+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.535676+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.535861+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.921555+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.922408+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.938198+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.938724+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.939064+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.939422+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.939829+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.940085+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.943955+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.944489+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:46.957527+09:00","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.294665+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.301344+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.302118+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.302242+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.31999+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.320189+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 784 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:47.383981+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:50.117351+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:50.15343+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:50.16912+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:50.282074+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:50.29329+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:51.301187+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:51.30307+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 38 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 51 common frames omitted\nCaused by: java.net.UnknownHostException: db\n\tat java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 54 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:51.307446+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:51.312029+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:29:51.328529+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.363617+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.384456+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 78637 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.384827+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.40344+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.403616+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.765489+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.766411+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.783207+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.783699+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.784027+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.78438+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.784671+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.78487+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.788829+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.78935+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:36.802144+09:00","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.227106+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.233504+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.234487+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.234602+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.251251+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.251414+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 848 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.335854+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.359586+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.373061+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.48548+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.497616+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.578859+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.579648+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:37.603936+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.031934+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.062191+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.298238+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.673211+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.923957+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.948197+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.957747+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.963836+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:32:38.978704+09:00","@version":"1","message":"Started HamalogApplication in 2.885 seconds (process running for 3.054)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.041621+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.055568+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 79452 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.056075+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.419552+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.420396+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.436454+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.437057+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.437565+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.438051+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.438491+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.438792+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.443071+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.443705+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.461918+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.728499+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.753321+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.769823+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.872597+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.884641+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.966016+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.967053+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:18.99861+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:19.4533+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:19.484962+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:19.75751+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:20.499648+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:20.830827+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:20.862242+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.045 seconds (process running for 3.529)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:21.191007+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:21.201333+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:21.205525+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:38.721903+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:38.749573+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 79497 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:38.755324+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:38.773915+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:38.77408+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.097554+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.098199+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.115758+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.116219+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.116539+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.116866+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.117187+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.117403+09:00","@version":"1","message":"Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.120803+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.121518+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.134565+09:00","@version":"1","message":"Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.426269+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.432001+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.432634+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.432718+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.448494+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.448676+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 674 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.521985+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.542243+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.553855+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.660803+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.672883+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.760317+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.761008+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:39.783971+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:40.199308+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:40.22854+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:40.455161+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:40.80631+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.066781+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.087791+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.099545+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.102237+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.103937+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.109119+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.109567+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.110183+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:41.116435+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:47.818468+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:47.836457+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 79514 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:47.836812+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:47.85233+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:47.852501+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.15574+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.156218+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.173538+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.173982+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.174292+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.174707+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.175104+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.175355+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.178559+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.178851+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.190751+09:00","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.471429+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.477233+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.477912+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.478004+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.494163+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.494359+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 642 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.562828+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.58049+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.594851+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.697881+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.710727+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.79848+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.799184+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:48.820632+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:49.236468+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:49.265578+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:49.47087+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:49.818878+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.071377+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.091529+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.108948+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.111974+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.113612+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.119675+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.120096+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.120747+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:44:50.127124+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.04176+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.058944+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 79771 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.059398+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.078177+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.078346+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.396324+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.396827+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.411429+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.411863+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.412173+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.412496+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.412786+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.412958+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.41633+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.41683+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.429361+09:00","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.729871+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.735108+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.735713+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.735797+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.751794+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.751945+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 673 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.819087+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.837392+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.848629+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.952946+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:51.965848+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:52.055525+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:52.056303+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:52.078559+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:52.49158+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:52.52173+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:52.745661+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.296362+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.563977+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.583458+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.594831+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.597169+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.598789+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.604335+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.604759+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.605359+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:53.611403+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:58.010639+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:58.018544+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:58.022177+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:58.030327+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:58.030809+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T21:48:58.032087+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:17.888849+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:17.909389+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 81080 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:17.909815+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:17.926749+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:17.926926+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.249098+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.249596+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.264041+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.264486+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.264796+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.265115+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.265442+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.265606+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.268842+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.269308+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.281669+09:00","@version":"1","message":"Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.619001+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.624063+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.624692+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.624777+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.640087+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.640252+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 713 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.70667+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.725892+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.73803+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.850938+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.864254+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.961349+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.962109+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:18.985764+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:19.397442+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:19.426701+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:19.745287+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:20.082754+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:20.323559+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:20.342813+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:20.354082+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:20.360213+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:05:20.365447+09:00","@version":"1","message":"Started HamalogApplication in 2.753 seconds (process running for 3.058)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:06:28.166303+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:06:28.168751+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:06:28.171495+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:06:28.177154+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:06:28.177581+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:06:28.178125+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.139947+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.157985+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 84433 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.158362+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.179344+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.179517+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.561485+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.562223+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.577685+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.578199+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.578554+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.578876+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.579159+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.579371+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.584376+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.585095+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.637887+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.644582+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.645084+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.651145+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.651267+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.651344+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.651412+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.651482+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.65155+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.985279+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.991209+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.991889+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:40.991964+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.009379+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.009535+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 830 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.089971+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.113459+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.127415+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.266064+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.281197+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.37927+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.380051+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.405938+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.844308+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:41.872637+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.026011+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'jwtTokenProvider' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/JwtTokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'tokenBlacklistService' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/TokenBlacklistService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'org.springframework.data.redis.core.RedisTemplate<java.lang.String, java.lang.Object>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.026214+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.031149+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.031275+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.031866+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.03304+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:42.038795+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.038329+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.055357+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 84458 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.05569+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.075126+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.075282+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.436826+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.437528+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.452951+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.453405+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.453728+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.454033+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.454342+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.454522+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.458036+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.458531+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.508067+09:00","@version":"1","message":"Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.514053+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.514491+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.519774+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.51989+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.519965+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.520034+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.520136+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.520199+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.846847+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.852796+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.853461+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.85357+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.8703+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.870433+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 795 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.944547+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.964265+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:51.975685+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.08526+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.098775+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.186323+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.191743+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.215275+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.631063+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.659734+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.815451+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'jwtTokenProvider' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/JwtTokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'tokenBlacklistService' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/TokenBlacklistService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'org.springframework.data.redis.core.RedisTemplate<java.lang.String, java.lang.Object>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.815638+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.821+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.821125+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.821743+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.822959+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:36:52.828752+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.301034+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.31973+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 84795 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.320157+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.334672+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.334821+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.659821+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.66035+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.674749+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.675162+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.675487+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.675829+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.676121+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.67634+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.680083+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.68049+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.729176+09:00","@version":"1","message":"Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.734573+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.734968+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.745444+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.74562+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.745702+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.745776+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.745844+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:34.745901+09:00","@version":"1","message":"Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.037156+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.043632+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.044916+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.045071+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.062672+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.062825+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 728 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.137762+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.156989+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.169385+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.27234+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.282698+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.353606+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.354638+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.377984+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.785499+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.813858+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.990634+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'jwtTokenProvider' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/JwtTokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'tokenBlacklistService' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/TokenBlacklistService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'org.springframework.data.redis.core.RedisTemplate<java.lang.String, java.lang.Object>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.990828+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.996618+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.996759+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.997442+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:35.998649+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:37:36.004579+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:18.839422+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:18.859294+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 85005 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:18.859611+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:18.873618+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:18.873743+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.206309+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.206835+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.222967+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.223413+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.223724+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.224038+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.224334+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.22451+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.227962+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.228442+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.284893+09:00","@version":"1","message":"Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.291218+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.291677+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.29716+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.297281+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.297355+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.297428+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.297496+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.297585+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.600747+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.606673+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.607609+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.607715+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.624264+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.624421+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 751 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.698611+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.719537+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.731321+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.83524+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.846305+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.916733+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.917462+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:19.941768+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.347913+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.377959+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.550357+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'jwtTokenProvider' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/JwtTokenProvider.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'tokenBlacklistService' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/TokenBlacklistService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'jwtTokenProvider': Requested bean is currently in creation: Is there an unresolvable circular reference or an asynchronous initialization dependency?","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.550583+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.556115+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.556285+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.557249+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.558833+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:39:20.565193+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.275667+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.295827+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 85170 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.296166+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.312619+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.312781+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.652726+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.653275+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.668769+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.669189+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.669549+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.669873+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.670154+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.670353+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.673977+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.674604+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.725499+09:00","@version":"1","message":"Finished Spring Data repository scanning in 48 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.731263+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.731674+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.737035+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.737303+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.737447+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.737766+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.737855+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:15.737912+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.042409+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.049631+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.050735+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.050849+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.068306+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.068465+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 755 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.142029+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.165524+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.180861+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.308063+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.320098+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.40834+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.410665+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.442616+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.923497+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:16.951481+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.197735+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.591142+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 5: No qualifying bean of type 'com.Hamalog.security.filter.RateLimitingFilter' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.591688+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.602537+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.602739+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.603607+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.604762+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:40:17.612384+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:22.869054+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:22.88739+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 85343 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:22.887695+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:22.901761+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:22.901886+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.252252+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.252778+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.269793+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.270245+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.270605+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.270956+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.271257+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.271499+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.276582+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.277277+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.32746+09:00","@version":"1","message":"Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.340406+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.341758+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.348098+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.348227+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.348305+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.348478+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.348575+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.348632+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.664489+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.670637+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.671613+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.671727+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.688813+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.688968+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 786 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.767735+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.788184+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.800033+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.907569+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.918213+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.989779+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:23.99057+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:24.016464+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:24.433243+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:24.466395+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:24.702025+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.159731+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.174371+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.569013+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.593949+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.602456+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.609129+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:41:25.615682+09:00","@version":"1","message":"Started HamalogApplication in 2.995 seconds (process running for 3.177)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.589334+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.606681+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 85839 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.607053+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.625457+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.625622+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.98084+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.981367+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.997151+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.997604+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.997912+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.998211+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.998519+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:39.998696+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.002312+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.002805+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.052694+09:00","@version":"1","message":"Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.058593+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.059034+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.064219+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.064357+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.064433+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.064545+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.064612+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.064719+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.439894+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.445628+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.446285+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.446393+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.463413+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.46355+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 838 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.53857+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.558034+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.569832+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.67598+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.687786+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.777755+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.778495+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:40.801819+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:41.205907+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:41.234633+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:41.452839+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:41.771408+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:41.78293+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.168844+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.190963+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.202575+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.206767+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.210786+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.216201+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.216638+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.217175+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:42.223473+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:50.244357+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:50.255639+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:50.29296+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:50.300383+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:50.300972+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:48:50.30233+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:13.995173+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.013788+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 86149 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.014231+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.030369+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.030532+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.369213+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.369689+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.383478+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.38389+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.384169+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.384486+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.38482+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.385041+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.388219+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.388514+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.436128+09:00","@version":"1","message":"Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.44186+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.442309+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.447459+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.44758+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.447655+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.447789+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.447917+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.448021+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.754132+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.759226+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.759848+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.759931+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.775281+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.77542+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 745 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.846502+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.862856+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.873327+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.968555+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:14.982099+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:15.08087+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:15.081582+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:15.102707+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:15.510392+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:15.539451+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:15.754527+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.178215+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.192972+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.619531+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.640811+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.652658+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.659149+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:16.665327+09:00","@version":"1","message":"Started HamalogApplication in 2.917 seconds (process running for 3.222)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:21.807196+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:21.810234+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:21.818479+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:21.824135+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:21.824651+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-17T22:49:21.825364+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
