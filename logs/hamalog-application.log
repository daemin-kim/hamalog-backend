{"@timestamp":"2025-08-18T22:36:18.380371+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.380463+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.486326+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.486425+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.490447+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.490975+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.491253+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.49152+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.491858+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.492101+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.492589+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.492641+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.494316+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.49435+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.500724+09:00","@version":"1","message":"Finished Spring Data repository scanning in 6 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.502621+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.502678+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.50464+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504685+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504712+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504764+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504795+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.50482+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504846+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504868+09:00","@version":"1","message":"Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.56671+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.567423+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.567481+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.572466+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.572517+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 191 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.6489+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.649886+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.655012+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.655751+09:00","@version":"1","message":"HikariPool-9 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.659146+09:00","@version":"1","message":"HikariPool-9 - Added connection conn73: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.659344+09:00","@version":"1","message":"HikariPool-9 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.659778+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-9)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.717361+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.721834+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.799116+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.025421+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.214614+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.225218+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.232251+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.234506+09:00","@version":"1","message":"Started HamalogApplication in 0.872 seconds (process running for 3567.719)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.235011+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.330471+09:00","@version":"1","message":"Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.332431+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.334842+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.442926+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.443389+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-63","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.443608+09:00","@version":"1","message":"HikariPool-9 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.443823+09:00","@version":"1","message":"HikariPool-9 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.507471+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.507562+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.606452+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.606538+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610042+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610324+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610536+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610786+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.61098+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.611165+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.611441+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.611479+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.613102+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.613176+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.618936+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.621233+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.621276+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623785+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623839+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623864+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623897+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623924+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623955+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623997+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.624056+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.689766+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.690123+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.690172+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.696539+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.696609+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 188 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.776844+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.777876+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.781455+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.781851+09:00","@version":"1","message":"HikariPool-10 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.78257+09:00","@version":"1","message":"HikariPool-10 - Added connection conn83: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.782679+09:00","@version":"1","message":"HikariPool-10 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.78299+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-10)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.830393+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.835053+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.905472+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.096212+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.281171+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.29349+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.302221+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.305972+09:00","@version":"1","message":"Started HamalogApplication in 0.826 seconds (process running for 4026.791)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.306721+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.046055+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.06384+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 6801 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.064225+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.080459+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.080713+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.413575+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.414263+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.429436+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.429881+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.430224+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.430568+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.430872+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.431265+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.431959+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.432185+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.435611+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.435936+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.487657+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.493534+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.493994+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499025+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499202+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499313+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499406+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499495+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499587+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499694+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.49977+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.792919+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.798341+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.799213+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.79932+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.815064+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.815221+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 734 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.024486+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.040276+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.050982+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.145869+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.156613+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.20989+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.211415+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 38 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 51 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 54 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.21647+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.335131+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.345122+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.50611+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.524953+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 6937 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.525439+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.540128+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.54028+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.873132+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.873801+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.890195+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.890706+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.89105+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.891385+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.89169+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.892156+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.893463+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.893723+09:00","@version":"1","message":"Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.897245+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.897594+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.949806+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.955328+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.955784+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961255+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961465+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961603+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961695+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961779+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961862+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961952+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.962029+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.254055+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.260162+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.261082+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.261179+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.277358+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.277516+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 737 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.489143+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.505068+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.517126+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.610567+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.621034+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.627809+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"java.lang.RuntimeException: Driver com.mysql.cj.jdbc.Driver claims to not accept jdbcUrl, jdbc:h2:mem:hamalog;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n\tat com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:109)\n\tat com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:327)\n\tat com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:113)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:91)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.628928+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.739231+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.747834+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.314127+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.334278+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 7140 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.334664+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.349612+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.349786+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.681266+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.681928+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.69637+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.696856+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.697251+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.697721+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.698111+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.698525+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.699473+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.699792+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.704019+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.704365+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.75372+09:00","@version":"1","message":"Finished Spring Data repository scanning in 47 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.759636+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.760369+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.76631+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766509+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766649+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.76674+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766834+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766918+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.767011+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.767143+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.945859+09:00","@version":"1","message":"Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.947617+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.948657+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.056276+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.056892+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-71","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.057114+09:00","@version":"1","message":"HikariPool-10 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.057383+09:00","@version":"1","message":"HikariPool-10 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.05864+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.068547+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.069577+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.069689+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.09321+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.093501+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 744 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.120216+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.120302+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.202847+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.202931+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.207488+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.20822+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.20857+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.208917+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.209166+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.209743+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.210382+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.21046+09:00","@version":"1","message":"Finished Spring Data repository scanning in 7 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.212527+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.212564+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.218279+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.219767+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.219803+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.22193+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.221982+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222012+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222042+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222069+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222095+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222125+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222152+09:00","@version":"1","message":"Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.27976+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.280087+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.280134+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.285226+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.285274+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 165 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.3272+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.34637+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.347351+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.348658+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.350658+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.350934+09:00","@version":"1","message":"HikariPool-11 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.358466+09:00","@version":"1","message":"HikariPool-11 - Added connection conn93: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.358778+09:00","@version":"1","message":"HikariPool-11 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.359121+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-11)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.365192+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.413193+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.417376+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.466997+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.478349+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.489343+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.568052+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.569526+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.59318+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.702831+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.864599+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.874218+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.880671+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.883119+09:00","@version":"1","message":"Started HamalogApplication in 0.782 seconds (process running for 4770.369)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.883649+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.021169+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.057613+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.263019+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.561032+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.572732+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.835627+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.864138+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.980191+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.983128+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.985895+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.98652+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.98717+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.9952+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:38.914265+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:38.915391+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.021867+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.022233+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.022435+09:00","@version":"1","message":"HikariPool-11 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.022646+09:00","@version":"1","message":"HikariPool-11 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
