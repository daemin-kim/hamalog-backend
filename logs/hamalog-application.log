{"@timestamp":"2025-08-18T22:36:18.380371+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.380463+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.486326+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.486425+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.490447+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.490975+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.491253+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.49152+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.491858+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.492101+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.492589+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.492641+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.494316+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.49435+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.500724+09:00","@version":"1","message":"Finished Spring Data repository scanning in 6 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.502621+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.502678+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.50464+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504685+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504712+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504764+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504795+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.50482+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504846+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.504868+09:00","@version":"1","message":"Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.56671+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.567423+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.567481+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.572466+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.572517+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 191 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.6489+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.649886+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.655012+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.655751+09:00","@version":"1","message":"HikariPool-9 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.659146+09:00","@version":"1","message":"HikariPool-9 - Added connection conn73: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.659344+09:00","@version":"1","message":"HikariPool-9 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.659778+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-9)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.717361+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.721834+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:18.799116+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.025421+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.214614+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.225218+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.232251+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.234506+09:00","@version":"1","message":"Started HamalogApplication in 0.872 seconds (process running for 3567.719)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:36:19.235011+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.330471+09:00","@version":"1","message":"Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.332431+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.334842+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.442926+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.443389+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-63","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.443608+09:00","@version":"1","message":"HikariPool-9 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.443823+09:00","@version":"1","message":"HikariPool-9 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-63","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.507471+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.507562+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.606452+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.606538+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610042+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610324+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610536+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.610786+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.61098+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.611165+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.611441+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.611479+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.613102+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.613176+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.618936+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.621233+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.621276+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623785+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623839+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623864+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623897+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623924+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623955+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.623997+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.624056+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.689766+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.690123+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.690172+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.696539+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.696609+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 188 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.776844+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.777876+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.781455+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.781851+09:00","@version":"1","message":"HikariPool-10 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.78257+09:00","@version":"1","message":"HikariPool-10 - Added connection conn83: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.782679+09:00","@version":"1","message":"HikariPool-10 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.78299+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-10)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.830393+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.835053+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:57.905472+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.096212+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.281171+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.29349+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.302221+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.305972+09:00","@version":"1","message":"Started HamalogApplication in 0.826 seconds (process running for 4026.791)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:43:58.306721+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.046055+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.06384+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 6801 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.064225+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.080459+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.080713+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.413575+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.414263+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.429436+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.429881+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.430224+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.430568+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.430872+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.431265+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.431959+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.432185+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.435611+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.435936+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.487657+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.493534+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.493994+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499025+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499202+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499313+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499406+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499495+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499587+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.499694+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.49977+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.792919+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.798341+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.799213+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.79932+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.815064+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:16.815221+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 734 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.024486+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.040276+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.050982+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.145869+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:17.156613+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.20989+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.211415+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 38 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 51 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 54 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.21647+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.335131+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:18.345122+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.50611+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.524953+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 6937 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.525439+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.540128+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.54028+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.873132+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.873801+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.890195+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.890706+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.89105+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.891385+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.89169+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.892156+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.893463+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.893723+09:00","@version":"1","message":"Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.897245+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.897594+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.949806+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.955328+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.955784+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961255+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961465+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961603+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961695+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961779+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961862+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.961952+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:47.962029+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.254055+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.260162+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.261082+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.261179+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.277358+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.277516+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 737 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.489143+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.505068+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.517126+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.610567+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.621034+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.627809+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"java.lang.RuntimeException: Driver com.mysql.cj.jdbc.Driver claims to not accept jdbcUrl, jdbc:h2:mem:hamalog;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n\tat com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:109)\n\tat com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:327)\n\tat com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:113)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:91)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.628928+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.739231+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:54:48.747834+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.314127+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.334278+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 7140 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.334664+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.349612+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.349786+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.681266+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.681928+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.69637+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.696856+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.697251+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.697721+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.698111+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.698525+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.699473+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.699792+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.704019+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.704365+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.75372+09:00","@version":"1","message":"Finished Spring Data repository scanning in 47 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.759636+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.760369+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.76631+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766509+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766649+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.76674+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766834+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.766918+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.767011+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.767143+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.945859+09:00","@version":"1","message":"Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.947617+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:20.948657+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.056276+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.056892+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-71","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.057114+09:00","@version":"1","message":"HikariPool-10 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.057383+09:00","@version":"1","message":"HikariPool-10 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-71","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.05864+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.068547+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.069577+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.069689+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.09321+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.093501+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 744 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.120216+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.120302+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.202847+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.202931+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.207488+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.20822+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.20857+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.208917+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.209166+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.209743+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.210382+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.21046+09:00","@version":"1","message":"Finished Spring Data repository scanning in 7 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.212527+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.212564+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.218279+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.219767+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.219803+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.22193+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.221982+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222012+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222042+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222069+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222095+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222125+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.222152+09:00","@version":"1","message":"Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.27976+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.280087+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.280134+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.285226+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.285274+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 165 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.3272+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.34637+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.347351+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.348658+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.350658+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.350934+09:00","@version":"1","message":"HikariPool-11 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.358466+09:00","@version":"1","message":"HikariPool-11 - Added connection conn93: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.358778+09:00","@version":"1","message":"HikariPool-11 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.359121+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-11)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.365192+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.413193+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.417376+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.466997+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.478349+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.489343+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.568052+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.569526+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.59318+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.702831+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.864599+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.874218+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.880671+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.883119+09:00","@version":"1","message":"Started HamalogApplication in 0.782 seconds (process running for 4770.369)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:21.883649+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.021169+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.057613+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.263019+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.561032+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.572732+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.835627+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.864138+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.980191+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.983128+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.985895+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.98652+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.98717+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:22.9952+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:38.914265+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:38.915391+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.021867+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.022233+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.022435+09:00","@version":"1","message":"HikariPool-11 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:56:39.022646+09:00","@version":"1","message":"HikariPool-11 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:35.879644+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:35.897176+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 10136 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:35.897548+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:35.913706+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:35.913882+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.235299+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.236001+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.250686+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.251132+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.251466+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.251798+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.252101+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.252501+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.253145+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.253352+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.256572+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.256888+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.307272+09:00","@version":"1","message":"Finished Spring Data repository scanning in 49 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.312483+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.312926+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318081+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318295+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318409+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318501+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318592+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318679+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318768+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.318862+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.616177+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.621535+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.622406+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.622507+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.640811+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.641027+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 726 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.851057+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.866737+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.877768+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.971236+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:36.981851+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:38.037591+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:38.040285+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 38 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 51 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 54 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:38.047796+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:38.164277+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:20:38.175357+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.071481+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.089808+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 10276 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.09015+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.090342+09:00","@version":"1","message":"Loading source class com.Hamalog.HamalogApplication","logger_name":"org.springframework.boot.SpringApplication","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.106471+09:00","@version":"1","message":"Matching URLs for reloading : [file:/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/, file:/Users/daeminkim/ideaProjects/Hamalog/build/resources/main/]","logger_name":"org.springframework.boot.devtools.restart.ChangeableUrls","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.106635+09:00","@version":"1","message":"Included patterns for restart : []","logger_name":"org.springframework.boot.devtools.settings.DevToolsSettings","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.106702+09:00","@version":"1","message":"Excluded patterns for restart : [/spring-boot-starter-[\\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]","logger_name":"org.springframework.boot.devtools.settings.DevToolsSettings","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.106797+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.106866+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.107172+09:00","@version":"1","message":"Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5644857a","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.115779+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.120856+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.141996+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/aop/ApiLoggingAspect.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.143544+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/OpenApiConfig.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.146655+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/RedisConfig.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.148429+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/config/SecurityConfig.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.15746+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/controller/auth/AuthController.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.159219+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/controller/medication/MedicationRecordController.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.160214+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/controller/medication/MedicationScheduleController.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.160454+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/controller/oauth2/OAuth2Controller.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.160731+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/controller/sideEffect/SideEffectController.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.171733+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/handler/GlobalExceptionHandler.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.172264+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/logging/RequestLoggingFilter.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.173931+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/CustomUserDetailsService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.174683+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/filter/RateLimitingFilter.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.174936+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/filter/RequestSizeMonitoringFilter.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.175274+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/JwtTokenProvider.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.175463+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/jwt/TokenBlacklistService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.175615+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/security/oauth2/OAuth2AuthenticationSuccessHandler.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.176306+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/auth/AuthService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.176554+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/medication/FileStorageService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.176727+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/medication/MedicationRecordService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.176937+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/medication/MedicationScheduleService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.177273+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/oauth2/KakaoOAuth2UserService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.177719+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/security/RateLimitingService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.178042+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/sideEffect/RecentSideEffectCacheService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.178218+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/service/sideEffect/SideEffectService.class]","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.432205+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.432835+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.435207+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.438149+09:00","@version":"1","message":"@EnableAutoConfiguration was declared on a class in the package 'com.Hamalog'. Automatic @Repository and @Entity scanning is enabled.","logger_name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.438372+09:00","@version":"1","message":"Scanning for JDBC repositories in packages com.Hamalog.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.444436+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.444576+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationScheduleRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.444652+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationTimeRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.444711+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/member/MemberRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.444769+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.445066+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.445132+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectSideEffectRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.44934+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.449769+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.450078+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.450408+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.450749+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.451128+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.451763+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.452013+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.455228+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.455529+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.456902+09:00","@version":"1","message":"Scanning for JPA repositories in packages com.Hamalog.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.459134+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.459221+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationScheduleRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.459347+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationTimeRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.45941+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/member/MemberRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.459483+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.459538+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.459586+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectSideEffectRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.508241+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.513784+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.514208+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.516922+09:00","@version":"1","message":"Scanning for Redis repositories in packages com.Hamalog.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.518885+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.518973+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationScheduleRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519049+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/medication/MedicationTimeRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519114+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/member/MemberRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519174+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519221+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519274+09:00","@version":"1","message":"Identified candidate component class: file [/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/com/Hamalog/repository/sideEffect/SideEffectSideEffectRecordRepository.class]","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519619+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519775+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519865+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.519941+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.520021+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.520103+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.520177+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.520243+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.557833+09:00","@version":"1","message":"Creating shared instance of singleton bean 'springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.558283+09:00","@version":"1","message":"Creating shared instance of singleton bean 'authorizedClientManagerRegistrar'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.558359+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.593251+09:00","@version":"1","message":"Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.595267+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.595412+09:00","@version":"1","message":"Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.595504+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.609424+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.60989+09:00","@version":"1","message":"Creating shared instance of singleton bean 'conversionServicePostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.61198+09:00","@version":"1","message":"Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.612258+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.612353+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.619193+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.619842+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.621043+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.621198+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.621284+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.621999+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.623051+09:00","@version":"1","message":"Creating shared instance of singleton bean 'methodValidationPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.62359+09:00","@version":"1","message":"Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.624798+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.630083+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.635162+09:00","@version":"1","message":"Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.635338+09:00","@version":"1","message":"Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.635905+09:00","@version":"1","message":"Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.636067+09:00","@version":"1","message":"Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.636193+09:00","@version":"1","message":"Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.636545+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.636618+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.641443+09:00","@version":"1","message":"Found AspectJ method: public java.lang.Object com.Hamalog.aop.ApiLoggingAspect.logApiRequestAndResponse(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable","logger_name":"org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.678229+09:00","@version":"1","message":"Creating shared instance of singleton bean 'transactionAttributeSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.682369+09:00","@version":"1","message":"Creating shared instance of singleton bean 'transactionInterceptor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.682501+09:00","@version":"1","message":"Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.68429+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.684346+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.691961+09:00","@version":"1","message":"Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@60a8630]","logger_name":"org.springframework.ui.context.support.UiApplicationContextUtils","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.692352+09:00","@version":"1","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.692437+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.700217+09:00","@version":"1","message":"Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.700302+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.701355+09:00","@version":"1","message":"Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.701463+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.702222+09:00","@version":"1","message":"Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.704611+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.719039+09:00","@version":"1","message":"Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.720275+09:00","@version":"1","message":"Creating shared instance of singleton bean 'sslBundleRegistry'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.720374+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.720788+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.721391+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5644857a'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.721447+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.722518+09:00","@version":"1","message":"Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.722647+09:00","@version":"1","message":"Creating shared instance of singleton bean 'fileWatcher'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.723468+09:00","@version":"1","message":"Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.727213+09:00","@version":"1","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.727482+09:00","@version":"1","message":"Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.728145+09:00","@version":"1","message":"Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.728206+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.728831+09:00","@version":"1","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.728871+09:00","@version":"1","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.730702+09:00","@version":"1","message":"Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.73077+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.731013+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.747541+09:00","@version":"1","message":"Creating shared instance of singleton bean 'errorPageCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.747727+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.748102+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.749132+09:00","@version":"1","message":"Creating shared instance of singleton bean 'dispatcherServletRegistration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.749203+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.74962+09:00","@version":"1","message":"Creating shared instance of singleton bean 'dispatcherServlet'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.749685+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.75041+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.752916+09:00","@version":"1","message":"Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.764191+09:00","@version":"1","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.764298+09:00","@version":"1","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.765191+09:00","@version":"1","message":"Creating shared instance of singleton bean 'multipartConfigElement'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.765281+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.765589+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.767656+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.772056+09:00","@version":"1","message":"Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.804763+09:00","@version":"1","message":"Code archive: /Users/daeminkim/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.4.5/414fcf9f9e0ccb961243d8f36ef8ad6d4040e745/spring-boot-3.4.5.jar","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.804885+09:00","@version":"1","message":"Code archive: /Users/daeminkim/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.4.5/414fcf9f9e0ccb961243d8f36ef8ad6d4040e745/spring-boot-3.4.5.jar","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.80505+09:00","@version":"1","message":"None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.823849+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.830135+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.831288+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.831369+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.847705+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.847804+09:00","@version":"1","message":"Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.847878+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 740 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.848883+09:00","@version":"1","message":"Creating shared instance of singleton bean 'h2Console'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.848983+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.849309+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.850293+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration' via constructor to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.851167+09:00","@version":"1","message":"Creating shared instance of singleton bean 'securityFilterChainRegistration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.851233+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.851952+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.852611+09:00","@version":"1","message":"Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.855382+09:00","@version":"1","message":"Creating shared instance of singleton bean 'requestLoggingFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.856835+09:00","@version":"1","message":"Creating shared instance of singleton bean 'rateLimitingFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.857033+09:00","@version":"1","message":"Creating shared instance of singleton bean 'rateLimitingService'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.857361+09:00","@version":"1","message":"Creating shared instance of singleton bean 'redisTemplate'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.857433+09:00","@version":"1","message":"Creating shared instance of singleton bean 'redisConfig'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.858121+09:00","@version":"1","message":"Creating shared instance of singleton bean 'redisConnectionFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.927375+09:00","@version":"1","message":"Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937339+09:00","@version":"1","message":"Adding converter from class java.lang.String to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937488+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.String as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937559+09:00","@version":"1","message":"Adding converter from class java.lang.Number to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937623+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Number as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937786+09:00","@version":"1","message":"Adding converter from class java.lang.Enum to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937852+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Enum as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937907+09:00","@version":"1","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.937969+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938018+09:00","@version":"1","message":"Adding converter from class java.util.Date to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938066+09:00","@version":"1","message":"Adding converter from class [B to class java.util.Date as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938114+09:00","@version":"1","message":"Adding converter from class java.util.UUID to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938178+09:00","@version":"1","message":"Adding converter from class [B to class java.util.UUID as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938229+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938281+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938333+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938388+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938439+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938491+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938542+09:00","@version":"1","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.9386+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938648+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938697+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.93876+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938808+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.93886+09:00","@version":"1","message":"Adding converter from class java.time.Period to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938909+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.938955+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939071+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939173+09:00","@version":"1","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939247+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939307+09:00","@version":"1","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939361+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.93941+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939475+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939528+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939575+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939622+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939675+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939731+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939776+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939873+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.939948+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.940049+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.940098+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.940143+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.940197+09:00","@version":"1","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.940248+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94029+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.940351+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94041+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941039+09:00","@version":"1","message":"Adding converter from class java.lang.String to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941112+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.String as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941173+09:00","@version":"1","message":"Adding converter from class java.lang.Number to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941222+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Number as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941276+09:00","@version":"1","message":"Adding converter from class java.lang.Enum to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94132+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Enum as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941363+09:00","@version":"1","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941409+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941455+09:00","@version":"1","message":"Adding converter from class java.util.Date to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941499+09:00","@version":"1","message":"Adding converter from class [B to class java.util.Date as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.9416+09:00","@version":"1","message":"Adding converter from class java.util.UUID to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941645+09:00","@version":"1","message":"Adding converter from class [B to class java.util.UUID as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941693+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941742+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941787+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941835+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.941894+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942275+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942372+09:00","@version":"1","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942426+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94248+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942525+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942569+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942621+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942665+09:00","@version":"1","message":"Adding converter from class java.time.Period to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942792+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942839+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942893+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942941+09:00","@version":"1","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.942992+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943036+09:00","@version":"1","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943081+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943127+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943171+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943225+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943272+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943319+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943363+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943406+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94345+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943494+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943538+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94358+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943623+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943666+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943726+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943768+09:00","@version":"1","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943809+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943849+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943892+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.943933+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947117+09:00","@version":"1","message":"Adding converter from class java.lang.String to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947191+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.String as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947243+09:00","@version":"1","message":"Adding converter from class java.lang.Number to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947287+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Number as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947327+09:00","@version":"1","message":"Adding converter from class java.lang.Enum to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947366+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Enum as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947404+09:00","@version":"1","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947451+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94749+09:00","@version":"1","message":"Adding converter from class java.util.Date to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947532+09:00","@version":"1","message":"Adding converter from class [B to class java.util.Date as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.94757+09:00","@version":"1","message":"Adding converter from class java.util.UUID to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947609+09:00","@version":"1","message":"Adding converter from class [B to class java.util.UUID as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947781+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947844+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947901+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.947952+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948001+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948048+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948092+09:00","@version":"1","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948162+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948292+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948346+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948468+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948537+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948661+09:00","@version":"1","message":"Adding converter from class java.time.Period to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948718+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948772+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948837+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948885+09:00","@version":"1","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.948933+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949132+09:00","@version":"1","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949206+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949268+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949379+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949428+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949472+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949547+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949597+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949643+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949685+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949726+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949782+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949825+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949866+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949907+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949949+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.949989+09:00","@version":"1","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.950028+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.950073+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.950237+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.950298+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95159+09:00","@version":"1","message":"Adding converter from class java.lang.String to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951651+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.String as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951691+09:00","@version":"1","message":"Adding converter from class java.lang.Number to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951735+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Number as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951779+09:00","@version":"1","message":"Adding converter from class java.lang.Enum to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95182+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Enum as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951871+09:00","@version":"1","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951917+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.951959+09:00","@version":"1","message":"Adding converter from class java.util.Date to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952004+09:00","@version":"1","message":"Adding converter from class [B to class java.util.Date as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952045+09:00","@version":"1","message":"Adding converter from class java.util.UUID to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952085+09:00","@version":"1","message":"Adding converter from class [B to class java.util.UUID as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952125+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952168+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952224+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952269+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95231+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95235+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952389+09:00","@version":"1","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952432+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952472+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952514+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952587+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95263+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95267+09:00","@version":"1","message":"Adding converter from class java.time.Period to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952712+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952752+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952792+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952841+09:00","@version":"1","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952882+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.952977+09:00","@version":"1","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953284+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953459+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953551+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953598+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953639+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95368+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953723+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953769+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953808+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953847+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953896+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953939+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.953982+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954018+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954056+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954093+09:00","@version":"1","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954132+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954169+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954213+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.954251+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957545+09:00","@version":"1","message":"Adding converter from class java.lang.String to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95766+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.String as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957715+09:00","@version":"1","message":"Adding converter from class java.lang.Number to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957752+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Number as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957789+09:00","@version":"1","message":"Adding converter from class java.lang.Enum to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957833+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Enum as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957876+09:00","@version":"1","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95792+09:00","@version":"1","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957961+09:00","@version":"1","message":"Adding converter from class java.util.Date to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.957997+09:00","@version":"1","message":"Adding converter from class [B to class java.util.Date as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958039+09:00","@version":"1","message":"Adding converter from class java.util.UUID to class [B as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958083+09:00","@version":"1","message":"Adding converter from class [B to class java.util.UUID as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958128+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958171+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958214+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958249+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958292+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958339+09:00","@version":"1","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958382+09:00","@version":"1","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95842+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958455+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958491+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958535+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958578+09:00","@version":"1","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958624+09:00","@version":"1","message":"Adding converter from class java.time.Period to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958665+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958702+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958738+09:00","@version":"1","message":"Adding converter from class [B to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95878+09:00","@version":"1","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958824+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958867+09:00","@version":"1","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958911+09:00","@version":"1","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958953+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.958998+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95904+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959082+09:00","@version":"1","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959124+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959166+09:00","@version":"1","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.95921+09:00","@version":"1","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959255+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959299+09:00","@version":"1","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959341+09:00","@version":"1","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959385+09:00","@version":"1","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959429+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959471+09:00","@version":"1","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959525+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959562+09:00","@version":"1","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959606+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959649+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959694+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.959744+09:00","@version":"1","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.975227+09:00","@version":"1","message":"Autowiring by type from bean name 'rateLimitingService' via constructor to bean named 'redisTemplate'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.975913+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jacksonObjectMapper'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.975984+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.976429+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.977008+09:00","@version":"1","message":"Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.977074+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.977497+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.978989+09:00","@version":"1","message":"Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.979329+09:00","@version":"1","message":"Creating shared instance of singleton bean 'parameterNamesModule'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.979403+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.981635+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jsonMixinModule'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.981707+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.982263+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jsonMixinModuleEntries'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.982482+09:00","@version":"1","message":"Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5644857a'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.985213+09:00","@version":"1","message":"Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5644857a'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.985265+09:00","@version":"1","message":"Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.989291+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jsonComponentModule'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.989396+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.992+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jacksonGeoModule'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.992067+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.992889+09:00","@version":"1","message":"Creating shared instance of singleton bean 'springDataWebSettings'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.992959+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.993215+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.993754+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.996225+09:00","@version":"1","message":"Creating shared instance of singleton bean 'pageModule'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.997419+09:00","@version":"1","message":"Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5644857a'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.997459+09:00","@version":"1","message":"Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:09.999283+09:00","@version":"1","message":"Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.008937+09:00","@version":"1","message":"Autowiring by type from bean name 'rateLimitingFilter' via constructor to bean named 'rateLimitingService'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.008999+09:00","@version":"1","message":"Autowiring by type from bean name 'rateLimitingFilter' via constructor to bean named 'jacksonObjectMapper'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.009809+09:00","@version":"1","message":"Creating shared instance of singleton bean 'requestSizeMonitoringFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.013009+09:00","@version":"1","message":"Creating shared instance of singleton bean 'requestContextFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.014194+09:00","@version":"1","message":"Creating shared instance of singleton bean 'formContentFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.014256+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.015782+09:00","@version":"1","message":"Creating shared instance of singleton bean 'characterEncodingFilter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.019648+09:00","@version":"1","message":"Mapping filters: springSecurityFilterChain urls=[/*] order=-100, requestLoggingFilter urls=[/*] order=-2147483648, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, rateLimitingFilter urls=[/*] order=2147483647, requestSizeMonitoringFilter urls=[/*] order=2147483647","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.019729+09:00","@version":"1","message":"Mapping servlets: dispatcherServlet urls=[/], h2Console urls=[/h2-console/*]","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.029777+09:00","@version":"1","message":"Filter 'requestContextFilter' configured for use","logger_name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.030419+09:00","@version":"1","message":"Filter 'characterEncodingFilter' configured for use","logger_name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.030504+09:00","@version":"1","message":"Filter 'springSecurityFilterChain' configured for use","logger_name":"org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.030558+09:00","@version":"1","message":"Filter 'formContentFilter' configured for use","logger_name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.033456+09:00","@version":"1","message":"Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.033523+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.033844+09:00","@version":"1","message":"Creating shared instance of singleton bean 'dataSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.0339+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.034349+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.035106+09:00","@version":"1","message":"Found key 'DB_PASSWORD' in PropertySource 'systemEnvironment' with value of type String","logger_name":"org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.035569+09:00","@version":"1","message":"Found key 'DB_USERNAME' in PropertySource 'systemEnvironment' with value of type String","logger_name":"org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.037529+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jdbcConnectionDetails'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.037582+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.037937+09:00","@version":"1","message":"Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.038296+09:00","@version":"1","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.038322+09:00","@version":"1","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.038346+09:00","@version":"1","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'environment'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.047156+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.048134+09:00","@version":"1","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.048162+09:00","@version":"1","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.04971+09:00","@version":"1","message":"Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.049759+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.050125+09:00","@version":"1","message":"Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.050147+09:00","@version":"1","message":"Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.050337+09:00","@version":"1","message":"Creating shared instance of singleton bean 'entityManagerFactory'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.050398+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.05073+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.051994+09:00","@version":"1","message":"Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.052607+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.052639+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.052663+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2aaa7a9c'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.052687+09:00","@version":"1","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.053825+09:00","@version":"1","message":"Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.053897+09:00","@version":"1","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.056787+09:00","@version":"1","message":"Creating shared instance of singleton bean 'entityManagerFactoryBuilder'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.056946+09:00","@version":"1","message":"Creating shared instance of singleton bean 'jpaVendorAdapter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.060614+09:00","@version":"1","message":"Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.061707+09:00","@version":"1","message":"Creating shared instance of singleton bean 'persistenceManagedTypes'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.062122+09:00","@version":"1","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@2aaa7a9c'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.062152+09:00","@version":"1","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5644857a'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.065314+09:00","@version":"1","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.065341+09:00","@version":"1","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'persistenceManagedTypes'","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.07011+09:00","@version":"1","message":"Building JPA container EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.078534+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.094782+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.10543+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.198197+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:10.208671+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.260608+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.262005+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"restartedMain","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 38 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 51 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 54 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.266343+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.383983+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.388084+09:00","@version":"1","message":"Creating new Restarter for thread Thread[#1,main,5,main]","logger_name":"org.springframework.boot.devtools.restart.Restarter","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.388154+09:00","@version":"1","message":"Immediately restarting application","logger_name":"org.springframework.boot.devtools.restart.Restarter","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.38818+09:00","@version":"1","message":"Starting application com.Hamalog.HamalogApplication with URLs [file:/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main/, file:/Users/daeminkim/ideaProjects/Hamalog/build/resources/main/]","logger_name":"org.springframework.boot.devtools.restart.Restarter","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:11.397054+09:00","@version":"1","message":"\n\n\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:\n-----------------\n\n   AopAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:\n      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceConfiguration.Hikari matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceInitializationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceJmxConfiguration matched:\n      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)\n\n   DataSourceJmxConfiguration.Hikari matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   DevToolsDataSourceAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'javax.sql.DataSource' (OnClassCondition)\n      - Devtools devtools enabled. (OnEnabledDevToolsCondition)\n      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)\n\n   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:\n      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:\n      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n\n   ErrorMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ErrorMvcAutoConfiguration#basicErrorController matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:\n      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)\n      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:\n      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GenericCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)\n\n   H2ConsoleAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)\n\n   HibernateJpaAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)\n\n   HibernateJpaConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   HttpClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpEncodingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)\n\n   HttpEncodingAutoConfiguration#characterEncodingFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)\n\n   HttpMessageConvertersAutoConfiguration#messageConverters matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcClientAutoConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations', 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.jdbc.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations,org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found beans 'transactionManager', 'namedParameterJdbcTemplate' (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.JdbcRepositoriesConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.repository.config.JdbcRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#dataAccessStrategyBean matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.core.convert.DataAccessStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#jdbcAggregateTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.core.JdbcAggregateTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#jdbcConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.core.convert.JdbcConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#jdbcCustomConversions matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.core.convert.JdbcCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#jdbcDialect matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.relational.core.dialect.Dialect; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#jdbcManagedTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.relational.RelationalManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcRepositoriesAutoConfiguration.SpringBootJdbcConfiguration#jdbcMappingContext matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.jdbc.core.mapping.JdbcMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   JdbcTemplateConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#jpaVendorAdapter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#transactionManager matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.JpaWebConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JtaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)\n      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)\n\n   LettuceConnectionConfiguration matched:\n      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.redis.client-type=lettuce) matched (OnPropertyCondition)\n\n   LettuceConnectionConfiguration#lettuceClientResources matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:\n      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   LocalDevToolsAutoConfiguration matched:\n      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)\n\n   MultipartAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)\n\n   MultipartAutoConfiguration#multipartConfigElement matched:\n      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration#multipartResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NamedParameterJdbcTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NettyAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)\n\n   NoOpCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)\n\n   OAuth2ClientAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   OAuth2ClientRegistrationRepositoryConfiguration matched:\n      - OAuth2 Clients Configured Condition found registered clients test_client (ClientsConfiguredCondition)\n\n   OAuth2ClientRegistrationRepositoryConfiguration#clientRegistrationRepository matched:\n      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   OAuth2WebSecurityConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) found bean 'clientRegistrationRepository' (OnBeanCondition)\n\n   OAuth2WebSecurityConfiguration#authorizedClientRepository matched:\n      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   OAuth2WebSecurityConfiguration#authorizedClientService matched:\n      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.OAuth2AuthorizedClientService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:\n      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   RateLimitingFilter matched:\n      - @ConditionalOnProperty (spring.data.redis.host) matched (OnPropertyCondition)\n\n   RateLimitingService matched:\n      - @ConditionalOnProperty (spring.data.redis.host) matched (OnPropertyCondition)\n\n   ReactorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)\n\n   RecentSideEffectCacheService matched:\n      - @ConditionalOnProperty (spring.data.redis.host) matched (OnPropertyCondition)\n\n   RedisAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)\n\n   RedisAutoConfiguration#redisConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#stringRedisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisCacheConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)\n\n   RedisConfig matched:\n      - @ConditionalOnProperty (spring.data.redis.host) matched (OnPropertyCondition)\n\n   RedisReactiveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   RedisRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)\n\n   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)\n\n   RestTemplateAutoConfiguration#restTemplateBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SecurityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)\n\n   SecurityAutoConfiguration#authenticationEventPublisher matched:\n      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SecurityFilterAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:\n      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)\n\n   ServletWebServerFactoryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:\n      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   SimpleCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)\n\n   SpringBootWebSecurityConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   SpringDataWebAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#pageableCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#sortCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#springDataWebSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfigProperties matched:\n      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SpringDocConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)\n\n   SpringDocConfiguration#fileSupportConverter matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#objectMapperProvider matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#openAPIBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OpenAPIService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#operationBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#parameterBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericParameterService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#polymorphicModelConverter matched:\n      - @ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#requestBodyBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.service.RequestBodyService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#responseSupportConverter matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#schemaPropertyDeprecatingConverter matched:\n      - @ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#securityParser matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.service.SecurityService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration#springDocProviders matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDocProviders; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider matched:\n      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' (OnClassCondition)\n\n   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration#webFluxSupportConverter matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.WebFluxSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocConfiguration.WebConversionServiceConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService' (OnClassCondition)\n\n   SpringDocPageableConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.domain.Pageable' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SpringDocPageableConfiguration#delegatingMethodParameterCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocPageableConfiguration#pageableOpenAPIConverter matched:\n      - @ConditionalOnProperty (springdoc.model-converters.pageable-converter.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PageableOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocSecurityConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.security.core.Authentication' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-spring-security:true}}) resulted in true (OnExpressionCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.Filter' (OnClassCondition)\n\n   SpringDocSortConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.domain.Sort' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SpringDocSortConfiguration#sortOpenAPIConverter matched:\n      - @ConditionalOnProperty (springdoc.model-converters.sort-converter.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SortOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration#openApiResource matched:\n      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration#requestBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.service.RequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration#responseBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration#springWebProvider matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction' (OnClassCondition)\n\n   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SqlInitializationAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)\n\n   SslAutoConfiguration#sslBundleRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SwaggerConfig matched:\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SwaggerConfig#indexPageTransformer matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SwaggerConfig#swaggerConfigResource matched:\n      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SwaggerConfig#swaggerWebMvcConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SwaggerConfig#swaggerWelcome matched:\n      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SwaggerUiConfigParameters matched:\n      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SwaggerUiConfigProperties matched:\n      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   SwaggerUiOAuthProperties matched:\n      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)\n\n   TaskExecutionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration matched:\n      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskSchedulingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionManagerCustomizationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ValidationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)\n      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)\n\n   ValidationAutoConfiguration#defaultValidator matched:\n      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ValidationAutoConfiguration#methodValidationPostProcessor matched:\n      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration#formContentFilter matched:\n      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:\n      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:\n      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:\n      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:\n      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:\n      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebSocketServletAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:\n      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n\nNegative matches:\n-----------------\n\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)\n\n   AopAutoConfiguration.ClassProxyingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   ArtemisAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   BatchAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)\n\n   Cache2kCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)\n\n   CacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:\n      Did not match:\n         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)\n\n   CaffeineCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)\n\n   CassandraAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)\n\n   CassandraRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   ClientHttpConnectorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   CodecsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   CouchbaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   CouchbaseReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:\n      Did not match:\n         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)\n\n   DataSourceCheckpointRestoreConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)\n\n   DataSourceConfiguration.Dbcp2:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourceConfiguration.Generic:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)\n\n   DataSourceConfiguration.OracleUcp:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourceConfiguration.Tomcat:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)\n\n   DevToolsR2dbcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)\n\n   ElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)\n\n   ElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)\n\n   ElasticsearchRestClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)\n\n   EmbeddedLdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   ErrorWebFluxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   FlywayAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FreeMarkerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)\n\n   GraphQlAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlRSocketAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlWebFluxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebFluxSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GroovyTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)\n\n   GsonAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   GsonHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   HazelcastAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastJpaDependencyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HttpHandlerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)\n\n   HypermediaAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)\n\n   InfinispanCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)\n\n   IntegrationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)\n\n   JCacheCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)\n\n   JedisConnectionConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)\n\n   JerseyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)\n\n   JmsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)\n\n   JmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)\n\n   JndiConnectionFactoryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)\n\n   JndiDataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   JndiJtaConfiguration:\n      Did not match:\n         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)\n\n   JooqAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)\n\n   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:\n      Did not match:\n         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)\n\n   JsonbAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JsonbHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   KafkaAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)\n\n   LdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)\n\n   LdapRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactory:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' redisConnectionFactory (OnBeanCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactoryVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' redisConnectionFactory (OnBeanCondition)\n\n   LiquibaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)\n\n   LocalDevToolsAutoConfiguration.LiveReloadConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.devtools.livereload.enabled) found different value in property 'enabled' (OnPropertyCondition)\n\n   LocalDevToolsAutoConfiguration.RestartConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.devtools.restart.enabled) found different value in property 'enabled' (OnPropertyCondition)\n\n   MailSenderAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)\n\n   MailSenderValidatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)\n\n   MessageSourceAutoConfiguration:\n      Did not match:\n         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)\n\n   MongoAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MultipleOpenApiSupportConfiguration:\n      Did not match:\n         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (MultipleOpenApiSupportCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)\n\n   MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)\n         - Ancestor org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n\n   MustacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)\n\n   Neo4jAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   OAuth2AuthorizationServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)\n\n   OAuth2AuthorizationServerJwtAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)\n\n   OAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)\n\n   OAuth2WebSecurityConfiguration.OAuth2SecurityFilterChainConfiguration:\n      Did not match:\n         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)\n\n   ProjectInfoAutoConfiguration#buildProperties:\n      Did not match:\n         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)\n\n   ProjectInfoAutoConfiguration#gitProperties:\n      Did not match:\n         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)\n\n   PulsarAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   PulsarReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   QuartzAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   R2dbcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)\n\n   R2dbcInitializationConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)\n\n   R2dbcProxyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcTransactionManagerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)\n\n   RSocketGraphQlClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   RSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketRequesterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)\n\n   RSocketServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)\n\n   RSocketStrategiesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RabbitAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)\n\n   ReactiveElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)\n\n   ReactiveElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ReactiveMultipartAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   ReactiveOAuth2ClientAutoConfiguration:\n      Did not match:\n         - NoneNestedConditions 1 matched 0 did not; NestedCondition on ReactiveOAuth2ClientAutoConfiguration.NonServletApplicationCondition.ServletApplicationCondition found 'session' scope (ReactiveOAuth2ClientAutoConfiguration.NonServletApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'reactor.core.publisher.Flux', 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   ReactiveOAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)\n\n   ReactiveSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   ReactiveUserDetailsServiceAutoConfiguration:\n      Did not match:\n         - AnyNestedCondition 0 matched 3 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass found unwanted class 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' (ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)\n\n   ReactiveWebServerFactoryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)\n\n   RedisAutoConfiguration#redisTemplate:\n      Did not match:\n         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration#reactiveRedisTemplate:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) did not find any beans of type org.springframework.data.redis.connection.ReactiveRedisConnectionFactory (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) did not find any beans of type org.springframework.data.redis.connection.ReactiveRedisConnectionFactory (OnBeanCondition)\n\n   RemoteDevToolsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)\n\n   RepositoryRestMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)\n\n   Saml2RelyingPartyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)\n\n   SecurityDataConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)\n\n   SendGridAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)\n\n   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedJetty:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedUndertow:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   SessionAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   SpringApplicationAdminJmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)\n\n   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:\n      Did not match:\n         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)\n\n   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)\n\n   SpringDocConfiguration#propertiesResolverForSchema:\n      Did not match:\n         - @ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties' (OnPropertyCondition)\n\n   SpringDocConfiguration#propertyCustomizingConverter:\n      Did not match:\n         - @ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer (OnBeanCondition)\n\n   SpringDocConfiguration#springdocBeanFactoryPostProcessor:\n      Did not match:\n         - AnyNestedCondition 0 matched 2 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled'; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (CacheOrGroupedOpenApiCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)\n\n   SpringDocConfiguration#springdocBeanFactoryPostProcessor2:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)\n\n   SpringDocConfiguration.SpringDocActuatorConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (OnClassCondition)\n\n   SpringDocConfiguration.SpringDocRepositoryRestConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)\n\n   SpringDocDataRestConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)\n\n   SpringDocFunctionCatalogConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer' (OnClassCondition)\n\n   SpringDocGroovyConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'groovy.lang.MetaClass' (OnClassCondition)\n\n   SpringDocHateoasConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.server.LinkRelationProvider' (OnClassCondition)\n\n   SpringDocJavadocConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.github.therapi.runtimejavadoc.CommentFormatter' (OnClassCondition)\n\n   SpringDocKotlinConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'kotlin.coroutines.Continuation' (OnClassCondition)\n\n   SpringDocKotlinxConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'kotlinx.coroutines.flow.Flow' (OnClassCondition)\n\n   SpringDocNativeConfiguration:\n      Did not match:\n         - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-native-support:false}}) resulted in false (OnExpressionCondition)\n      Matched:\n         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration#springSecurityLoginEndpointCustomiser:\n      Did not match:\n         - @ConditionalOnProperty (springdoc.show-login-endpoint) did not find property 'springdoc.show-login-endpoint' (OnPropertyCondition)\n\n   SpringDocSortConfiguration#delegatingMethodParameterCustomizer:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) found beans of type 'org.springdoc.core.customizers.DelegatingMethodParameterCustomizer' delegatingMethodParameterCustomizer (OnBeanCondition)\n\n   SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)\n\n   SwaggerConfig#springWebProvider:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider (OnBeanCondition)\n\n   SwaggerConfig#swaggerUiConfigParameters:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springdoc.core.properties.SwaggerUiConfigParameters; SearchStrategy: all) found beans of type 'org.springdoc.core.properties.SwaggerUiConfigParameters' org.springdoc.core.properties.SwaggerUiConfigParameters (OnBeanCondition)\n\n   SwaggerConfig#swaggerUiHome:\n      Did not match:\n         - @ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path' (OnPropertyCondition)\n\n   SwaggerConfig.SwaggerActuatorWelcomeConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter:\n      Did not match:\n         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration:\n      Did not match:\n         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)\n\n   ThymeleafAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)\n\n   TransactionAutoConfiguration#transactionalOperator:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)\n\n   UserDetailsServiceAutoConfiguration:\n      Did not match:\n         - AnyNestedCondition 0 matched 3 did not; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass found unwanted class 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' (UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)\n         - found 'session' scope (OnWebApplicationCondition)\n\n   WebClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebFluxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   WebMvcAutoConfiguration#hiddenHttpMethodFilter:\n      Did not match:\n         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)\n\n   WebServiceTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)\n\n   WebServicesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)\n\n   WebSessionIdResolverAutoConfiguration:\n      Did not match:\n         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)\n\n   WebSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)\n\n   WebSocketReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)\n\n   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)\n\n   XADataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n\nExclusions:\n-----------\n\n    None\n\n\nUnconditional classes:\n----------------------\n\n    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration\n\n    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration\n\n    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration\n\n    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration\n\n\n","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"DEBUG","level_value":10000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.565024+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.583346+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 10425 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.583757+09:00","@version":"1","message":"The following 1 profile is active: \"prod\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.598492+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.598638+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.926952+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.927602+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.942155+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.942657+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.943025+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.943389+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.943708+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.944118+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.945561+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.945905+09:00","@version":"1","message":"Finished Spring Data repository scanning in 15 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.950355+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.950743+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:53.99996+09:00","@version":"1","message":"Finished Spring Data repository scanning in 47 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.005526+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.006076+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.012405+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.012622+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.01275+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.01284+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.012925+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.013006+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.013193+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.013293+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.302128+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.307586+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.308429+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.30853+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.325884+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.326078+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 728 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.533467+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.549604+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.561994+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.653794+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.667475+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.732272+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.732987+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:54.755699+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.139622+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.17772+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.381353+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.687546+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.699035+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.960657+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.985094+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:55.995681+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:21:56.001042+09:00","@version":"1","message":"Started HamalogApplication in 2.68 seconds (process running for 2.831)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:33.983686+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.001156+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 12824 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.001503+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.025018+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.025204+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.352179+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.352653+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.366456+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.366857+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.367162+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.367473+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.367746+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.368038+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.368685+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.368864+09:00","@version":"1","message":"Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.371909+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.372205+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.419644+09:00","@version":"1","message":"Finished Spring Data repository scanning in 46 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.424799+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.425221+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430189+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.43038+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430494+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430581+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430653+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430713+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430773+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.430821+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.734758+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.739731+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.740348+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.740468+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.75555+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.755714+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 730 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.953566+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.972504+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:34.985114+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.084649+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.094888+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.172861+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.173573+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.198108+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.591843+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.62816+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:35.827476+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.132352+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.143744+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.413618+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.439392+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.451433+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.562758+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.566871+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.570408+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.571192+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.571957+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:36.578394+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:42.064092+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:42.070458+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:42.186732+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:42.189518+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:42.190013+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:43:42.19092+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.126469+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.153647+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 13126 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.15499+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.180417+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.180637+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.66855+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.669426+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.690124+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.691052+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.691571+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.691937+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.692326+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.692858+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.693791+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.694247+09:00","@version":"1","message":"Finished Spring Data repository scanning in 21 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.69902+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.699471+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.770839+09:00","@version":"1","message":"Finished Spring Data repository scanning in 69 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.779063+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.779861+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.787798+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.788403+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.7888+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.788888+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.788972+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.789039+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.789126+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:03.789264+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.201161+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.20949+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.210315+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.210423+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.236394+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.236674+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1056 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.522073+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.538203+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.548891+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.650296+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.660747+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.743339+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.744236+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:04.771523+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:05.194856+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:05.233341+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:05.44805+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:05.772908+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:05.784366+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:06.076466+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:06.096619+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:06.108781+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:06.114934+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:44:06.120637+09:00","@version":"1","message":"Started HamalogApplication in 3.316 seconds (process running for 3.624)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.496585+09:00","@version":"1","message":"Restarting due to 80 class path changes (0 additions, 80 deletions, 0 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.499367+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.499867+09:00","@version":"1","message":"Pausing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.502498+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.502794+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.623532+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.62655+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-9","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.627062+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:49.627887+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:51.920018+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 13126 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:51.920101+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.005511+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.005674+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.010557+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.010992+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.011247+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.011526+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.01182+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.012184+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.012618+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.012694+09:00","@version":"1","message":"Finished Spring Data repository scanning in 6 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.015106+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.015216+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.02357+09:00","@version":"1","message":"Finished Spring Data repository scanning in 7 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.026205+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.026368+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.029701+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.030082+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.03016+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.030209+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.030259+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.0303+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.030341+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.030378+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.117445+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.119142+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.119309+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.126255+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.126379+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 206 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.206689+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.207934+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.212769+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.213463+09:00","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.214859+09:00","@version":"1","message":"HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.215038+09:00","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.215455+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.280736+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.288464+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.358753+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.558376+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.727564+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.739468+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.75173+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.754933+09:00","@version":"1","message":"Started HamalogApplication in 0.858 seconds (process running for 350.296)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:49:52.756268+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:51:23.221764+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:51:23.222921+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:51:23.3319+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:51:23.332686+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:51:23.33318+09:00","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T23:51:23.333519+09:00","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
