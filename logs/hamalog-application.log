{"@timestamp":"2025-08-18T20:53:48.467503+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.488864+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 89827 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.489184+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.515777+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.515949+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.909569+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.910233+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.924771+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.92522+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.925547+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.925861+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.926138+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.926428+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.926998+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.927177+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.930579+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.93105+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.984089+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.990873+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.991292+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.997476+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.997665+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.99774+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.997811+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.998006+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.998274+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.998347+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:48.998402+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.317705+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.323347+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.323955+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.324034+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.340324+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.340471+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 824 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.569729+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.598812+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.613102+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.722218+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.734577+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.829361+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.830102+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:49.855508+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:50.268232+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:50.296485+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:50.514646+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:50.840938+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:50.854446+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:51.128742+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:51.149078+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:51.161204+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:51.167174+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:53:51.173183+09:00","@version":"1","message":"Started HamalogApplication in 2.949 seconds (process running for 3.23)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:55:44.377834+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:55:44.380865+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:55:44.494301+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:55:44.501863+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:55:44.502337+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T20:55:44.502896+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.532826+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.558865+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 90845 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.560019+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.91227+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.912847+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.930102+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.930741+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.93122+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.931773+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.93241+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.933022+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.933887+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.934246+09:00","@version":"1","message":"Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.939085+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:57.939702+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.000501+09:00","@version":"1","message":"Finished Spring Data repository scanning in 58 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.009258+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.009816+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.01666+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.016938+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.017101+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.017229+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.017335+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.01744+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.017542+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.017685+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.282992+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.30524+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.318009+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.369449+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.38035+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.46541+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.466402+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.495244+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.860313+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:58.890222+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:59.300747+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:59.926842+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:00:59.941827+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:00.291221+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:00.340007+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.026 seconds (process running for 4.186)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:00.639098+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:00.644984+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:00.645826+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:35.754329+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:35.780068+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 91010 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:35.780975+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:35.803261+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:35.80357+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.179696+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.180223+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.194623+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.195043+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.195344+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.195645+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.195909+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.196203+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.196832+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.197034+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.2003+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.200633+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.251271+09:00","@version":"1","message":"Finished Spring Data repository scanning in 49 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.260967+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.261415+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.266693+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.266905+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.266987+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.267051+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.267338+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.267421+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.267503+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.267566+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.56578+09:00","@version":"1","message":"Tomcat initialized with port 8081 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.571777+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.572637+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.572745+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.591008+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.591223+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 787 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.836064+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.852299+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.862916+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.962163+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:36.973014+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.038318+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.039044+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.058649+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.446505+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.475406+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.680326+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.979514+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:37.992001+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:38.357874+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:38.392599+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:38.406238+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8081\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:38.416022+09:00","@version":"1","message":"Tomcat started on port 8081 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:38.423442+09:00","@version":"1","message":"Started HamalogApplication in 2.966 seconds (process running for 3.116)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:55.98829+09:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:55.988457+09:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:01:55.989292+09:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8081-exec-1","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:06.885374+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:06.89152+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:07.011153+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:07.019824+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:07.020608+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:07.021462+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:32.725315+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:32.74258+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 91173 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:32.74289+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:32.761132+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:32.761282+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.106625+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.10712+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.122024+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.122496+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.122794+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.123094+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.123389+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.123666+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.124321+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.124601+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.128101+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.128696+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.191072+09:00","@version":"1","message":"Finished Spring Data repository scanning in 60 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.199703+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.200423+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.207688+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.208211+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.20838+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.208484+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.208563+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.208627+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.208704+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.208842+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.564368+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.569408+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.570002+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.570103+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.585211+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.585368+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 824 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.792309+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.812716+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.825357+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.929403+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:33.940367+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:34.021894+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:34.022759+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:34.048613+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:34.460308+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:34.489803+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:34.69623+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.009006+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.020211+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.288234+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.30791+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.319562+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.32531+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:02:35.330959+09:00","@version":"1","message":"Started HamalogApplication in 2.842 seconds (process running for 3.106)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:06:54.516243+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:06:54.519353+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:06:54.637743+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:06:54.648607+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:06:54.64937+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:06:54.650126+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:51.681646+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:51.705917+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 92150 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:51.707063+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.095671+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.096348+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.123607+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.124404+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.124836+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.125261+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.125667+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.126041+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.126851+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.12742+09:00","@version":"1","message":"Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.132271+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.133093+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.189904+09:00","@version":"1","message":"Finished Spring Data repository scanning in 54 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.19802+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.198618+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.206828+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.207201+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.207371+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.207502+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.20763+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.207752+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.207882+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.208048+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.485703+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.511563+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.526664+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.629488+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.642586+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.726592+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.73016+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:52.757514+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:53.165128+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:53.19473+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:53.59946+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:54.191284+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:54.207166+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:54.562893+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:54.595848+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.161 seconds (process running for 3.626)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:55.356719+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 60, max: 60","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:55.357917+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 5, max: 5","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:55.528976+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:55.535645+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:10:55.53666+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:51.942039+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:51.962233+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:51.962539+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:51.97932+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:51.979475+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.346423+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.347192+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.363105+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.363666+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.364044+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.364415+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.364946+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.365266+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.365979+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.366196+09:00","@version":"1","message":"Finished Spring Data repository scanning in 16 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.370246+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.370776+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.430109+09:00","@version":"1","message":"Finished Spring Data repository scanning in 57 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.436662+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.437104+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.442529+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.442718+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.442803+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.442868+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.442938+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.443006+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.443093+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.443147+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.753659+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.759782+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.760841+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.76097+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.780181+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:52.780385+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 801 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.009453+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.034434+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.048201+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.16242+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.174908+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.254977+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.255739+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.280717+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.698501+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.726066+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:53.948047+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.287603+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.301877+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.582686+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.608168+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.617594+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.623741+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:36:54.629338+09:00","@version":"1","message":"Started HamalogApplication in 2.942 seconds (process running for 3.109)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:12.883481+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:12.903654+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 96283 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:12.904038+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:12.919747+09:00","@version":"1","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:12.91989+09:00","@version":"1","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.289609+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.290292+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.304678+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.305113+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.30544+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.305737+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.306045+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.306346+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.306953+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.307141+09:00","@version":"1","message":"Finished Spring Data repository scanning in 14 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.310511+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.310992+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.363606+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.370179+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.370696+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377304+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377522+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377599+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377675+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377737+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.3778+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377863+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.377916+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.696275+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.701924+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.70255+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.702649+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.718845+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.719001+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 798 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.943657+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.972187+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:13.984948+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.089916+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.10068+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.191049+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.191768+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.216545+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.643101+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.671579+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:14.880022+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.19639+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.208078+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.506557+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.526507+09:00","@version":"1","message":"Unable to start LiveReload server","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.538664+09:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.650284+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.653873+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.661428+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.662073+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.662743+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:41:15.671008+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.767385+09:00","@version":"1","message":"Restarting due to 80 class path changes (0 additions, 80 deletions, 0 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.769272+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.769636+09:00","@version":"1","message":"Pausing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.77376+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.773998+09:00","@version":"1","message":"Stopping ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.888352+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.896385+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-9","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.896931+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:14.90026+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-9","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.762968+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.776351+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 97421 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.776931+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.873702+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.873807+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.963329+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.963483+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.967188+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.96755+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.967813+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.968138+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.968394+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.968621+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.968955+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.968997+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.970397+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.970452+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.977943+09:00","@version":"1","message":"Finished Spring Data repository scanning in 7 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.980071+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.980374+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983439+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983576+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983662+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983723+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.98377+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983815+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983865+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:16.983905+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.054596+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.055522+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.055616+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.063817+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.063937+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 189 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.141918+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.142997+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.146645+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.147073+09:00","@version":"1","message":"HikariPool-3 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.148117+09:00","@version":"1","message":"HikariPool-3 - Added connection conn13: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.148227+09:00","@version":"1","message":"HikariPool-3 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.148482+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.213393+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.214573+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.230089+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.239526+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.240455+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.241252+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.241723+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.242164+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.242574+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.24293+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.243893+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.244238+09:00","@version":"1","message":"Finished Spring Data repository scanning in 26 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.253295+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.254423+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.320014+09:00","@version":"1","message":"Finished Spring Data repository scanning in 62 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.328017+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.328599+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.334558+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.334891+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.335035+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.335189+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.335319+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.335625+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.335777+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.335897+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.337384+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.58996+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.677363+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.705732+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.72071+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.781673+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.792745+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.806886+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.811163+09:00","@version":"1","message":"Started HamalogApplication in 0.968 seconds (process running for 926.292)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.812594+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.844651+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.856916+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.93537+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.936278+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:17.963822+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:18.375011+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:18.408944+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:18.777511+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:19.482361+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:19.497424+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:19.82979+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:19.863804+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.306 seconds (process running for 3.802)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:20.667238+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 60, max: 60","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:20.668439+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 5, max: 5","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:20.848579+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:20.854992+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:52:20.856179+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:04.905126+09:00","@version":"1","message":"Restarting due to 80 class path changes (0 additions, 0 deletions, 80 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:04.906134+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:04.907125+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.014863+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.017446+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-11","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.017801+09:00","@version":"1","message":"HikariPool-3 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.018626+09:00","@version":"1","message":"HikariPool-3 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-11","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.095091+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.095214+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.203741+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.203874+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.209153+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.209716+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.209973+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.210241+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.210493+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.210731+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.211042+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.211097+09:00","@version":"1","message":"Finished Spring Data repository scanning in 6 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.213178+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.213236+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.218854+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.22066+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.220716+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223288+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223356+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223392+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223493+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223587+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223628+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.22367+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.223704+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.292494+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.292986+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.293044+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.302665+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.302783+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 207 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.395886+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.397001+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.400737+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.401278+09:00","@version":"1","message":"HikariPool-4 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.385961+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.404711+09:00","@version":"1","message":"HikariPool-4 - Added connection conn23: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.405316+09:00","@version":"1","message":"HikariPool-4 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.406012+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.413409+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 97787 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.415832+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.499014+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.524033+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.618005+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.83897+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.905906+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.906641+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.927557+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.928885+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.929372+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.929842+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.930219+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.930632+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.931744+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.932135+09:00","@version":"1","message":"Finished Spring Data repository scanning in 22 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.943214+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:05.943802+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.00637+09:00","@version":"1","message":"Finished Spring Data repository scanning in 58 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.016082+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.016719+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.022745+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.023241+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.023621+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.023766+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.0239+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.024019+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.024255+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.02438+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.036849+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.051711+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.060864+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.063407+09:00","@version":"1","message":"Started HamalogApplication in 1.01 seconds (process running for 1034.545)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.064066+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.326477+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.344272+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.3564+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.480945+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:06.492799+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:07.543695+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:07.545104+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"Test worker","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 127 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 140 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 143 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:07.550845+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:07.580783+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:07.594696+09:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.Hamalog.HamalogApplicationTests@1d432d56]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"Test worker","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@24a7725d testClass = com.Hamalog.HamalogApplicationTests, locations = [], classes = [com.Hamalog.HamalogApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [PropertySourceDescriptor[locations=[], ignoreResourceNotFound=false, name=null, propertySourceFactory=null, encoding=null]], propertySourceProperties = [\"spring.jpa.hibernate.ddl-auto=create-drop\", \"logging.level.org.hibernate.SQL=warn\", \"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@57abad67, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@42721fe, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@447a020, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1817f1eb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3bcbb589, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2807bdeb, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@5cdd77e], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1818)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\t... 87 common frames omitted\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\t... 107 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\t... 122 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:08.379811+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 60, max: 60","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:54:08.380775+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 5, max: 5","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:31.851897+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:31.868094+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 98163 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:31.868528+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.211424+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.212121+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.233588+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.234271+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.234694+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.23518+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.235612+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.236009+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.237164+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.238929+09:00","@version":"1","message":"Finished Spring Data repository scanning in 22 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.244673+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.245133+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.297498+09:00","@version":"1","message":"Finished Spring Data repository scanning in 50 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.304462+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.305018+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.31107+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.311338+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.311475+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.311612+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.311756+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.311885+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.312012+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.312152+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.564303+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.583913+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.597622+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.694987+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.705545+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.780253+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.781187+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:32.805215+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:33.2175+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:33.246168+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:33.618883+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:34.287838+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:34.301137+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:34.635959+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:34.668476+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.025 seconds (process running for 3.521)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:35.441104+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 60, max: 60","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:35.442148+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 5, max: 5","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:35.619007+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:35.624971+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:35.625851+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.23761+09:00","@version":"1","message":"Restarting due to 80 class path changes (0 additions, 0 deletions, 80 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.238304+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-23","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.239235+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.346648+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-23","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.348511+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-23","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.348759+09:00","@version":"1","message":"HikariPool-4 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-23","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.349066+09:00","@version":"1","message":"HikariPool-4 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-23","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.408652+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.408808+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.498964+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.499088+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.502838+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.50317+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.503399+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.503668+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.503892+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.504446+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.504844+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.504889+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.50663+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.506676+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.513285+09:00","@version":"1","message":"Finished Spring Data repository scanning in 6 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.515399+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.515482+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518377+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.51845+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518493+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518527+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518563+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518595+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518628+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.518757+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.590127+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.591156+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.591226+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.600176+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.600289+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 190 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.664163+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.680628+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.681733+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.686045+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.686493+09:00","@version":"1","message":"HikariPool-5 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.685942+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 98297 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.687377+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.687389+09:00","@version":"1","message":"HikariPool-5 - Added connection conn33: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.687867+09:00","@version":"1","message":"HikariPool-5 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.68823+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.749803+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.757037+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:49.849932+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.095709+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.154632+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.155293+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.171656+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.172457+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.17289+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.17331+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.173712+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.17409+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.175803+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.176353+09:00","@version":"1","message":"Finished Spring Data repository scanning in 18 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.18442+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.184935+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.248808+09:00","@version":"1","message":"Finished Spring Data repository scanning in 56 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.259225+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.260174+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.26681+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267168+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267342+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267468+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267592+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267715+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267832+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.267952+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.288931+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.31908+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.327189+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.330266+09:00","@version":"1","message":"Started HamalogApplication in 0.949 seconds (process running for 1318.812)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.331051+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.555463+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.572641+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.585919+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.683954+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:50.696699+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:51.748458+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:51.750562+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"Test worker","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 127 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 140 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 143 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:51.757776+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:51.789085+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:51.803368+09:00","@version":"1","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.Hamalog.HamalogApplicationTests@42012093]","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"Test worker","level":"WARN","level_value":30000,"stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@3713bedc testClass = com.Hamalog.HamalogApplicationTests, locations = [], classes = [com.Hamalog.HamalogApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [PropertySourceDescriptor[locations=[], ignoreResourceNotFound=false, name=null, propertySourceFactory=null, encoding=null]], propertySourceProperties = [\"spring.jpa.hibernate.ddl-auto=create-drop\", \"logging.level.org.hibernate.SQL=warn\", \"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@57abad67, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@42721fe, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@447a020, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1817f1eb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3bcbb589, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2807bdeb, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8acf22af], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1818)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\t... 87 common frames omitted\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\t... 107 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\t... 122 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:52.580631+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 60, max: 60","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:58:52.581691+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 5, max: 5","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.335644+09:00","@version":"1","message":"Restarting due to 80 class path changes (0 additions, 0 deletions, 80 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.336722+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-31","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.338087+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.444525+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-31","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.446023+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-31","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.44626+09:00","@version":"1","message":"HikariPool-5 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-31","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.446462+09:00","@version":"1","message":"HikariPool-5 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-31","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.501082+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.501175+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.578663+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.578774+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.582267+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.582565+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.582767+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.583017+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.583237+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.583426+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.583708+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.583743+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.584972+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.585006+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.592007+09:00","@version":"1","message":"Finished Spring Data repository scanning in 6 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.594515+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.594631+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597503+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597566+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.5976+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597629+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597658+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597688+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597717+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.597745+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.654995+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.655349+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.655405+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.660659+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.660762+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 159 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.79812+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.799111+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.818506+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.818973+09:00","@version":"1","message":"HikariPool-6 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.821289+09:00","@version":"1","message":"HikariPool-6 - Added connection conn43: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.821932+09:00","@version":"1","message":"HikariPool-6 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.822442+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.946708+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:42.952447+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.086281+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.447336+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.738946+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.753244+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.763519+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.765964+09:00","@version":"1","message":"Started HamalogApplication in 1.283 seconds (process running for 1372.248)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T21:59:43.766536+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:00:59.948589+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:00:59.979308+09:00","@version":"1","message":"Starting HamalogApplication v0.0.1-SNAPSHOT using Java 21.0.2 with PID 98598 (/Users/daeminkim/ideaProjects/Hamalog/build/libs/Hamalog-0.0.1-SNAPSHOT.jar started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:00:59.979726+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.465733+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.466765+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.486544+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.487169+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.487594+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.488666+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.489115+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.48955+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.491017+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.491343+09:00","@version":"1","message":"Finished Spring Data repository scanning in 20 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.497007+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.497645+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.570772+09:00","@version":"1","message":"Finished Spring Data repository scanning in 70 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.578843+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.579417+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.584768+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.58509+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.585215+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.585291+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.585359+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.585426+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.585496+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.585555+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.992405+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:00.999836+09:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.001949+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.0021+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.021108+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.021448+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1016 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.315326+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.345776+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.363431+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.512745+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:01.530649+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:02.592271+09:00","@version":"1","message":"SQL Error: 0, SQLState: 08S01","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"main","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:02.593798+09:00","@version":"1","message":"HHH000342: Could not obtain connection to query metadata","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"main","level":"WARN","level_value":30000,"stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:45)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.Hamalog.HamalogApplication.main(HamalogApplication.java:10)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 40 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 53 common frames omitted\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:751)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:144)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 56 common frames omitted\n","service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:02.597462+09:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:02.716599+09:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:01:02.734517+09:00","@version":"1","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.084382+09:00","@version":"1","message":"Restarting due to 80 class path changes (0 additions, 0 deletions, 80 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.087046+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-39","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.088399+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.194267+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-39","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.197852+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-39","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.198328+09:00","@version":"1","message":"HikariPool-6 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-39","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.199399+09:00","@version":"1","message":"HikariPool-6 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-39","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.286598+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.286739+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.385771+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.385879+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.389698+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.390027+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.390495+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.390783+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.391012+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.391287+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.391877+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.391968+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.394063+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.39413+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.400368+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.402114+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.402161+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.404317+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.404392+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.40442+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.404445+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.404469+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.404783+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.404929+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.40509+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.478794+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.479668+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.479736+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.48589+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.485964+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 198 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.590185+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.592611+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.597328+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.59776+09:00","@version":"1","message":"HikariPool-7 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.599151+09:00","@version":"1","message":"HikariPool-7 - Added connection conn53: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.599578+09:00","@version":"1","message":"HikariPool-7 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.600164+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-7)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.662492+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.668554+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.758542+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:11.963819+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:12.14009+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:12.151147+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:12.157869+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:12.160153+09:00","@version":"1","message":"Started HamalogApplication in 0.902 seconds (process running for 2000.643)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:12.160724+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.599631+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.615392+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 430 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.615921+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.969589+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.970456+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.990793+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.991486+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.993864+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.994476+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.994921+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.995916+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.998334+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:35.998714+09:00","@version":"1","message":"Finished Spring Data repository scanning in 25 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.006057+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.006599+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.060138+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.07014+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.070981+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.077216+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.077551+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.077695+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.07782+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.077947+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.078065+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.07839+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.078838+09:00","@version":"1","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.343503+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.364701+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.37827+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.486488+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.497818+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.568417+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.569303+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:36.59538+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:37.001212+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:37.03425+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:37.442539+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.01543+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.032323+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.373433+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.425469+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.046 seconds (process running for 3.516)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.848767+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.85451+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:10:38.855355+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.273108+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.288121+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 1847 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.289025+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.665631+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.666526+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.689194+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.689834+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.690262+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.690801+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.691431+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.691861+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.692895+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.693267+09:00","@version":"1","message":"Finished Spring Data repository scanning in 23 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.700244+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.700848+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.752755+09:00","@version":"1","message":"Finished Spring Data repository scanning in 49 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.763811+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.764554+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.770731+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771056+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771214+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771346+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771477+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771603+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771751+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.771887+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.921661+09:00","@version":"1","message":"Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)","logger_name":"org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener","thread_name":"File Watcher","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.922768+09:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"Thread-47","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:42.923816+09:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.031338+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Thread-47","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.032419+09:00","@version":"1","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"Thread-47","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.032637+09:00","@version":"1","message":"HikariPool-7 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-47","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.032982+09:00","@version":"1","message":"HikariPool-7 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Thread-47","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.052608+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.088071+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.108661+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.109736+09:00","@version":"1","message":"Starting HamalogApplication using Java 21.0.2 with PID 95975 (/Users/daeminkim/ideaProjects/Hamalog/build/classes/java/main started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.109851+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.201622+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.201734+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.205346+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.206733+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.20703+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.207307+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.207518+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.207711+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.208+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.208038+09:00","@version":"1","message":"Finished Spring Data repository scanning in 5 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.209406+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.209433+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.217876+09:00","@version":"1","message":"Finished Spring Data repository scanning in 8 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.220351+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.220431+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.223705+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.223772+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.223802+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.22383+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.223856+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.223883+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.22391+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.223939+09:00","@version":"1","message":"Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.249418+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.268964+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.321188+09:00","@version":"1","message":"Tomcat initialized with port 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.32361+09:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.32369+09:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.40]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.332381+09:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat-1].[localhost].[/]","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.332485+09:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 222 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.38772+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.390046+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.416207+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.417298+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.420699+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.421108+09:00","@version":"1","message":"HikariPool-8 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.422004+09:00","@version":"1","message":"HikariPool-8 - Added connection conn63: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.422208+09:00","@version":"1","message":"HikariPool-8 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.422513+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-8)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.424142+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.475557+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.500015+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.582813+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"restartedMain","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.793674+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.913458+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.943754+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.971439+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.983479+09:00","@version":"1","message":"LiveReload server is running on port 35729","logger_name":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.991302+09:00","@version":"1","message":"Tomcat started on port 8080 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.994498+09:00","@version":"1","message":"Started HamalogApplication in 0.92 seconds (process running for 2632.478)","logger_name":"com.Hamalog.HamalogApplication","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:43.995071+09:00","@version":"1","message":"Condition evaluation unchanged","logger_name":"org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener","thread_name":"restartedMain","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:44.350215+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:44.969217+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:44.983776+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:45.33802+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:45.373207+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.311 seconds (process running for 3.811)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:45.810511+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:45.815794+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:45.817139+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:55.710138+09:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.2.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:55.725274+09:00","@version":"1","message":"Starting HamalogApplicationTests using Java 21.0.2 with PID 1951 (started by daeminkim in /Users/daeminkim/ideaProjects/Hamalog)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:55.725739+09:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.075035+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.07573+09:00","@version":"1","message":"Bootstrapping Spring Data JDBC repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.099026+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.100873+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.101752+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.10234+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.102797+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.103189+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.10404+09:00","@version":"1","message":"Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.104368+09:00","@version":"1","message":"Finished Spring Data repository scanning in 25 ms. Found 0 JDBC repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.108682+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.109548+09:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.162211+09:00","@version":"1","message":"Finished Spring Data repository scanning in 51 ms. Found 7 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.169008+09:00","@version":"1","message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.169631+09:00","@version":"1","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.175752+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176054+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationScheduleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176212+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.medication.MedicationTimeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176348+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.member.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176471+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176596+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176717+09:00","@version":"1","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.Hamalog.repository.sideEffect.SideEffectSideEffectRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.176828+09:00","@version":"1","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.450874+09:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.470468+09:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.6.13.Final","logger_name":"org.hibernate.Version","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.484275+09:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.586403+09:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.598485+09:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.676073+09:00","@version":"1","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:hamalog user=SA","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.677029+09:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:56.703007+09:00","@version":"1","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 2.3.232\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:57.095102+09:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:57.124166+09:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:57.523741+09:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:58.136915+09:00","@version":"1","message":"FileStorageService initialized with upload directory: /data/hamalog/images/","logger_name":"com.Hamalog.service.medication.FileStorageService","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:58.152509+09:00","@version":"1","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:58.521865+09:00","@version":"1","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:hamalog'","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:58.557759+09:00","@version":"1","message":"Started HamalogApplicationTests in 3.101 seconds (process running for 3.564)","logger_name":"com.Hamalog.HamalogApplicationTests","thread_name":"Test worker","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:59.31879+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 60, max: 60","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:59.319761+09:00","@version":"1","message":"Rate limit exceeded for key: test-key, current count: 5, max: 5","logger_name":"com.Hamalog.service.security.RateLimitingService","thread_name":"Test worker","level":"WARN","level_value":30000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:59.49402+09:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:59.500003+09:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
{"@timestamp":"2025-08-18T22:20:59.501319+09:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"hamalog","log_type":"application"}
